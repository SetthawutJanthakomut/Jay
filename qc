<!DOCTYPE html>
<html>
<head>
  <base target="_top">
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>QC RFI System</title>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Kanit:wght@300;400;500;600&display=swap" rel="stylesheet">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    
    body {
      font-family: 'Kanit', sans-serif;
      min-height: 100vh;
      background: linear-gradient(135deg, #667eea 0%, #4c63d2 25%, #3b5bdb 50%, #2948b1 75%, #1877f2 100%);
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 20px;
    }
    
    .container {
      width: 100%;
      max-width: 700px;
      background: #ffffff;
      border-radius: 20px;
      padding: 40px 35px;
      box-shadow: 0 20px 60px rgba(24, 119, 242, 0.3);
      animation: fadeIn 0.5s ease-out;
    }
    
    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: translateY(20px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }
    
    h1 {
      text-align: center;
      font-size: 32px;
      font-weight: 600;
      background: linear-gradient(135deg, #1877f2 0%, #2948b1 50%, #3b5bdb 100%);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      margin-bottom: 10px;
    }
    
    .subtitle {
      text-align: center;
      font-size: 16px;
      font-weight: 300;
      color: #666;
      margin-bottom: 30px;
    }

    .info-box {
      background: linear-gradient(135deg, #e7f3ff 0%, #d4e9ff 100%);
      border-left: 4px solid #1877f2;
      padding: 15px;
      border-radius: 10px;
      margin-bottom: 25px;
      font-size: 14px;
      color: #1c4587;
    }

    .info-box strong {
      color: #1877f2;
    }
    
    .form-group {
      margin-bottom: 20px;
    }
    
    label {
      display: block;
      font-size: 14px;
      font-weight: 500;
      color: #333;
      margin-bottom: 8px;
    }
    
    label span.required {
      color: #e74c3c;
    }
    
    input, select, textarea {
      width: 100%;
      padding: 12px 16px;
      border: 2px solid #e4e6eb;
      background: #ffffff;
      border-radius: 10px;
      font-family: 'Kanit', sans-serif;
      font-size: 15px;
      transition: all 0.3s ease;
      color: #333;
    }
    
    textarea {
      height: 90px;
      resize: vertical;
    }
    
    input:focus, select:focus, textarea:focus {
      outline: none;
      background: white;
      border-color: #1877f2;
      box-shadow: 0 0 0 3px rgba(24, 119, 242, 0.1);
    }
    
    input::placeholder, textarea::placeholder {
      color: #999;
      font-weight: 300;
    }
    
    input:disabled, select:disabled, textarea:disabled {
      opacity: 0.6;
      cursor: not-allowed;
      background: #f5f6f7;
    }
    
    .loading-select {
      background-color: #f5f6f7 !important;
      color: #666 !important;
    }
    
    .form-row {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 15px;
    }
    
    .inspector-container {
      border: 2px solid #e4e6eb;
      border-radius: 10px;
      padding: 15px;
      background: #f8f9fa;
      min-height: 100px;
      max-height: 300px;
      overflow-y: auto;
    }
    
    .inspector-loading {
      color: #999;
      text-align: center;
      padding: 30px;
      font-style: italic;
    }
    
    .inspector-checkbox-group {
      display: flex;
      flex-direction: column;
      gap: 10px;
    }
    
    .inspector-checkbox-item {
      display: flex;
      align-items: center;
      gap: 12px;
      padding: 12px;
      border-radius: 8px;
      background: white;
      border: 2px solid #e4e6eb;
      cursor: pointer;
      transition: all 0.2s;
    }
    
    .inspector-checkbox-item:hover {
      border-color: #1877f2;
      background: #f0f7ff;
    }
    
    .inspector-checkbox-item input[type="checkbox"] {
      width: 20px;
      height: 20px;
      cursor: pointer;
      accent-color: #1877f2;
    }
    
    .inspector-checkbox-item label {
      cursor: pointer;
      margin: 0;
      font-size: 15px;
      color: #333;
      flex: 1;
    }
    
    .inspector-checkbox-item .badge {
      font-size: 12px;
      padding: 4px 8px;
      border-radius: 5px;
      background: #e7f3ff;
      color: #1877f2;
      font-weight: 500;
    }
    
    .inspector-checkbox-item input[type="checkbox"]:checked + label {
      font-weight: 600;
      color: #1877f2;
    }
    
    button {
      width: 100%;
      padding: 14px;
      background: linear-gradient(135deg, #1877f2 0%, #2948b1 50%, #3b5bdb 100%);
      color: white;
      border: none;
      border-radius: 10px;
      font-family: 'Kanit', sans-serif;
      font-size: 16px;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.3s ease;
      margin-top: 10px;
      box-shadow: 0 4px 15px rgba(24, 119, 242, 0.3);
    }
    
    button:hover:not(:disabled) {
      transform: translateY(-2px);
      box-shadow: 0 6px 25px rgba(24, 119, 242, 0.4);
    }
    
    button:active:not(:disabled) {
      transform: translateY(0);
    }
    
    button:disabled {
      opacity: 0.6;
      cursor: not-allowed;
      transform: none;
    }
    
    .loading {
      display: none;
      text-align: center;
      margin-top: 20px;
    }
    
    .spinner {
      width: 40px;
      height: 40px;
      margin: 0 auto 10px;
      border: 3px solid rgba(24, 119, 242, 0.2);
      border-top-color: #1877f2;
      border-radius: 50%;
      animation: spin 0.8s linear infinite;
    }
    
    @keyframes spin {
      to { transform: rotate(360deg); }
    }
    
    .loading p {
      color: #666;
      font-weight: 300;
    }
    
    .message {
      padding: 12px 16px;
      margin-top: 20px;
      border-radius: 10px;
      text-align: center;
      display: none;
      font-size: 14px;
      animation: slideIn 0.3s ease-out;
      white-space: pre-line;
    }
    
    @keyframes slideIn {
      from {
        opacity: 0;
        transform: translateY(-10px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }
    
    .success {
      background: #d4edda;
      color: #155724;
      border: 1px solid #c3e6cb;
    }
    
    .error {
      background: #f8d7da;
      color: #721c24;
      border: 1px solid #f5c6cb;
    }
    
    .info {
      background: #d1ecf1;
      color: #0c5460;
      border: 1px solid #bee5eb;
    }
    
    .warning {
      background: #fff3cd;
      color: #856404;
      border: 1px solid #ffeaa7;
    }
    
    .time-info {
      font-size: 12px;
      color: #1877f2;
      margin-top: 5px;
      font-style: italic;
    }
    
    .footer-info {
      text-align: center;
      margin-top: 20px;
      padding-top: 20px;
      border-top: 1px solid #e4e6eb;
    }
    
    .footer-info p {
      color: #666;
      font-size: 14px;
      margin: 5px 0;
    }
    
    .footer-info .version {
      color: #999;
      font-size: 12px;
    }
    
    @media (max-width: 480px) {
      .container {
        padding: 30px 20px;
      }
      
      h1 {
        font-size: 26px;
      }
      
      .form-row {
        grid-template-columns: 1fr;
      }
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="header-section" style="text-align: center; margin-bottom: 30px;">
  <!-- Icon Container -->
  <div style="display: inline-flex; align-items: center; justify-content: center; width: 65px; height: 65px; background: linear-gradient(135deg, #1877f2 0%, #2948b1 100%); border-radius: 16px; margin-bottom: 12px; box-shadow: 0 6px 20px rgba(24, 119, 242, 0.3);">
    <span style="font-size: 36px;">üìã</span>
  </div>
  
  <!-- Title with Icon Decoration -->
  <h1>
    <span style="display: inline-flex; align-items: center; gap: 10px;">
      RFI Requirement System
      <span style="font-size: 20px; color: #10b981;">‚úì</span>
    </span>
  </h1>
  <p class="subtitle">‡∏£‡∏∞‡∏ö‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Request for Information (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö QC)</p>
</div>
    
    <div class="info-box">
      <strong>üìå ‡∏Ç‡πâ‡∏≠‡∏Å‡∏≥‡∏´‡∏ô‡∏î:</strong> ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏à‡∏≠‡∏á‡πÑ‡∏î‡πâ‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô (‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î‡πÄ‡∏ß‡∏•‡∏≤)<br>
      <strong>‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏Å‡∏≤‡∏£:</strong> 09:00 - 20:00 ‡∏ô. (‡∏ä‡πà‡∏ß‡∏á‡∏•‡∏∞ 30 ‡∏ô‡∏≤‡∏ó‡∏µ)<br>
      <strong>üõ°Ô∏è Buffer:</strong> ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏™‡∏≥‡∏£‡∏≠‡∏á ¬±25 ‡∏ô‡∏≤‡∏ó‡∏µ ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á RFI<br>
      <strong>üë• ‡∏à‡∏±‡∏î‡∏ó‡∏µ‡∏°:</strong> ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡∏µ‡∏°‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á)
    </div>
    
    <form id="qcRfiForm">
      <div class="form-group">
        <label for="code">‡∏£‡∏´‡∏±‡∏™‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£ (Code) <span class="required">*</span></label>
        <select id="code" name="code" required>
          <option value="">-- ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î... --</option>
        </select>
        <div class="time-info">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£</div>
      </div>

      <div class="form-group">
        <label for="description">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î RFI <span class="required">*</span></label>
        <textarea id="description" name="description" required placeholder="‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î Request for Information"></textarea>
      </div>
      
      <div class="form-group">
        <label for="location">‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà <span class="required">*</span></label>
        <input type="text" id="location" name="location" required placeholder="‡πÄ‡∏ä‡πà‡∏ô Station 1, Building A">
      </div>
      
      <div class="form-group">
        <label for="requestDate">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏á‡∏≤‡∏ô <span class="required">*</span></label>
        <input type="date" id="requestDate" name="requestDate" required>
        <div class="time-info">‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÑ‡∏î‡πâ</div>
      </div>
      
      <div class="form-row">
        <div class="form-group">
          <label for="startTime">‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô <span class="required">*</span></label>
          <select id="startTime" name="startTime" required disabled>
            <option value="">-- ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡πà‡∏≠‡∏ô --</option>
          </select>
        </div>
        
        <div class="form-group">
          <label for="endTime">‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î</label>
          <select id="endTime" name="endTime">
            <option value="">-- ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡πà‡∏≠‡∏ô --</option>
          </select>
          <div class="time-info">‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏ = ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô +1 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á</div>
        </div>
      </div>

      <div class="form-group">
        <label>‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô (Assigned Inspector) <span class="required">*</span></label>
        <div id="assignedInspectorContainer" class="inspector-container">
          <div class="inspector-loading">‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡πà‡∏≠‡∏ô</div>
        </div>
        <input type="hidden" id="assignedInspector" name="assignedInspector" required>
        <div class="time-info" id="selectedTeamsInfo">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏î‡πâ‡∏´‡∏•‡∏≤‡∏¢‡∏ó‡∏µ‡∏° (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡∏µ‡∏°‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á)</div>
      </div>

      <div class="form-group">
        <label for="requester">‡∏ú‡∏π‡πâ‡∏Ç‡∏≠ (Requester) <span class="required">*</span></label>
        <select id="requester" name="requester" required>
          <option value="">-- ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î... --</option>
        </select>
        <div class="time-info">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡∏Ç‡∏≠ RFI</div>
      </div>

      <div class="form-row">
        <div class="form-group" id="surveyReportGroup" style="display:none;">
          <label for="requireSurveyReport">Survey Report</label>
          <select id="requireSurveyReport" name="requireSurveyReport">
            <option value="None">None (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏ô‡∏ö)</option>
            <option value="Both">Both (Open + Close)</option>
          </select>
        </div>
        
        <div class="form-group" id="labReportGroup" style="display:none;">
          <label for="requireLabReport">Lab Report</label>
          <select id="requireLabReport" name="requireLabReport">
            <option value="None">None (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏ô‡∏ö)</option>
            <option value="Both">Both (Open + Close)</option>
            <option value="Closing">Closing (Close ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)</option>
          </select>
        </div>
      </div>
      
      <button type="submit" id="submitBtn">‡∏™‡∏£‡πâ‡∏≤‡∏á RFI</button>
    </form>
    
    <div class="loading" id="loading">
      <div class="spinner"></div>
      <p>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</p>
    </div>
    
    <div id="message" class="message"></div>
    
    <div class="footer-info">
      <p>QC RFI System</p>
      <p class="version">‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Quality Control Team</p>
    </div>
  </div>
  
  <script>
    var currentUserEmail = '';
    var availableTeams = [];

    window.onload = function() {
      loadCodeList();
      loadRequesterList();
      getCurrentUserEmail();
      checkQCRole();
    };

    function checkQCRole() {
      google.script.run
        .withSuccessHandler(function(result) {
          if (!result.success) {
            showMessage(result.message, 'error', 10000);
            document.getElementById('submitBtn').disabled = true;
            document.getElementById('qcRfiForm').style.opacity = '0.5';
            document.getElementById('qcRfiForm').style.pointerEvents = 'none';
          } else {
            showMessage('‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö ' + result.name + ' (' + result.role + ')', 'success', 3000);
          }
        })
        .withFailureHandler(function(error) {
          showMessage('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÑ‡∏î‡πâ', 'error');
        })
        .validateQCRole();
    }

    function getCurrentUserEmail() {
      google.script.run
        .withSuccessHandler(function(email) {
          currentUserEmail = email;
        })
        .withFailureHandler(function(error) {
          console.error('Error getting user email:', error);
        })
        .getCurrentUserEmail();
    }

    function loadCodeList() {
      var codeSelect = document.getElementById('code');
      codeSelect.innerHTML = '<option value="">-- ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏´‡∏±‡∏™‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£... --</option>';
      codeSelect.disabled = true;
      
      google.script.run
        .withSuccessHandler(function(codes) {
          codeSelect.innerHTML = '';
          
          if (!codes || codes.length === 0) {
            codeSelect.innerHTML = '<option value="">-- ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏´‡∏±‡∏™‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£ --</option>';
            showMessage('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏´‡∏±‡∏™‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£', 'warning');
          } else {
            codeSelect.innerHTML = '<option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£ --</option>';
            
            for (var i = 0; i < codes.length; i++) {
              var option = document.createElement('option');
              option.value = codes[i].code;
              option.textContent = codes[i].code + ' - ' + codes[i].name;
              codeSelect.appendChild(option);
            }
            
            codeSelect.disabled = false;
          }
        })
        .withFailureHandler(function(error) {
          codeSelect.innerHTML = '<option value="">-- ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î --</option>';
          showMessage('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏´‡∏±‡∏™‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£', 'error');
        })
        .getCodeList();
    }

    function loadRequesterList() {
      var requesterSelect = document.getElementById('requester');
      requesterSelect.innerHTML = '<option value="">-- ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏ú‡∏π‡πâ‡∏Ç‡∏≠... --</option>';
      requesterSelect.disabled = true;
      
      google.script.run
        .withSuccessHandler(function(requesters) {
          requesterSelect.innerHTML = '';
          
          if (!requesters || requesters.length === 0) {
            requesterSelect.innerHTML = '<option value="">-- ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡∏Ç‡∏≠ --</option>';
            showMessage('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏Ç‡∏≠', 'warning');
          } else {
            requesterSelect.innerHTML = '<option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡∏Ç‡∏≠ --</option>';
            
            for (var i = 0; i < requesters.length; i++) {
              var option = document.createElement('option');
              option.value = requesters[i].email;
              option.textContent = requesters[i].name + ' (' + requesters[i].email + ')';
              option.setAttribute('data-name', requesters[i].name);
              requesterSelect.appendChild(option);
            }
            
            requesterSelect.disabled = false;
          }
        })
        .withFailureHandler(function(error) {
          requesterSelect.innerHTML = '<option value="">-- ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î --</option>';
          showMessage('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏ú‡∏π‡πâ‡∏Ç‡∏≠', 'error');
        })
        .getRequesterList();
    }

    function loadAvailableTeams() {
      var date = document.getElementById('requestDate').value;
      var startTime = document.getElementById('startTime').value;
      var endTime = document.getElementById('endTime').value || calculateDefaultEndTime(startTime);
      var container = document.getElementById('assignedInspectorContainer');
      
      if (!date || !startTime) {
        container.innerHTML = '<div class="inspector-loading">‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡πà‡∏≠‡∏ô</div>';
        return;
      }
      
      container.innerHTML = '<div class="inspector-loading">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á...</div>';
      
      google.script.run
        .withSuccessHandler(function(resources) {
          availableTeams = resources || [];
          
          if (availableTeams.length === 0) {
            container.innerHTML = '<div class="inspector-loading">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ó‡∏µ‡∏°‡∏ß‡πà‡∏≤‡∏á‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏µ‡πâ</div>';
            showMessage('‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ó‡∏µ‡∏°‡∏ß‡πà‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å', 'warning');
            return;
          }
          
          var html = '<div class="inspector-checkbox-group">';
          
          for (var i = 0; i < availableTeams.length; i++) {
            var team = availableTeams[i];
            html += '<div class="inspector-checkbox-item">';
            html += '<input type="checkbox" id="team_' + team.id + '" value="' + team.name + '" onchange="updateSelectedTeams()">';
            html += '<label for="team_' + team.id + '">' + team.name + '</label>';
            html += '<span class="badge">' + team.subType + '</span>';
            html += '</div>';
          }
          
          html += '</div>';
          container.innerHTML = html;
          showMessage('‡∏û‡∏ö‡∏ó‡∏µ‡∏°‡∏ß‡πà‡∏≤‡∏á ' + availableTeams.length + ' ‡∏ó‡∏µ‡∏°', 'info', 3000);
        })
        .withFailureHandler(function(error) {
          container.innerHTML = '<div class="inspector-loading">‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î</div>';
          showMessage('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô', 'error');
        })
        .getAvailableResourcesList(date, startTime, endTime);
    }

    function calculateDefaultEndTime(startTime) {
      if (!startTime) return '';
      var parts = startTime.split(':');
      var hour = parseInt(parts[0]) + 1;
      return hour.toString().padStart(2, '0') + ':' + parts[1];
    }

    function updateSelectedTeams() {
      var checkboxes = document.querySelectorAll('#assignedInspectorContainer input[type="checkbox"]:checked');
      var selectedTeams = [];
      var hasSurvey = false;
      var hasLab = false;
      
      for (var i = 0; i < checkboxes.length; i++) {
        selectedTeams.push(checkboxes[i].value);
        var teamName = checkboxes[i].value.toLowerCase();
        if (teamName.indexOf('survey') !== -1) hasSurvey = true;
        if (teamName.indexOf('lab') !== -1) hasLab = true;
      }
      
      document.getElementById('assignedInspector').value = selectedTeams.join(',');
      
      document.getElementById('surveyReportGroup').style.display = hasSurvey ? 'block' : 'none';
      if (!hasSurvey) document.getElementById('requireSurveyReport').value = 'None';
      
      document.getElementById('labReportGroup').style.display = hasLab ? 'block' : 'none';
      if (!hasLab) document.getElementById('requireLabReport').value = 'None';
      
      var infoDiv = document.getElementById('selectedTeamsInfo');
      if (selectedTeams.length > 0) {
        infoDiv.textContent = '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß: ' + selectedTeams.join(', ');
        infoDiv.style.fontWeight = '600';
      } else {
        infoDiv.textContent = '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏î‡πâ‡∏´‡∏•‡∏≤‡∏¢‡∏ó‡∏µ‡∏° (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡∏µ‡∏°‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á)';
        infoDiv.style.fontWeight = '400';
      }
    }

    function showMessage(text, type, duration) {
      if (typeof duration === 'undefined') duration = 5000;
      var messageDiv = document.getElementById('message');
      messageDiv.textContent = text;
      messageDiv.className = 'message ' + type;
      messageDiv.style.display = 'block';
      setTimeout(function() {
        messageDiv.style.display = 'none';
      }, duration);
    }

    document.getElementById('requestDate').addEventListener('change', function() {
      updateAvailableSlots();
      document.getElementById('assignedInspectorContainer').innerHTML = '<div class="inspector-loading">‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡πà‡∏≠‡∏ô</div>';
      document.getElementById('assignedInspector').value = '';
    });

    document.getElementById('startTime').addEventListener('change', function() {
      updateEndTimeSlots();
      loadAvailableTeams();
    });

    document.getElementById('endTime').addEventListener('change', function() {
      loadAvailableTeams();
    });

    document.getElementById('qcRfiForm').addEventListener('submit', handleSubmit);

    function updateAvailableSlots() {
      var date = document.getElementById('requestDate').value;
      var startTimeSelect = document.getElementById('startTime');
      
      startTimeSelect.innerHTML = '<option value="">-- ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î... --</option>';
      startTimeSelect.disabled = true;
      resetEndTimeSelect();
      
      if (date) {
        google.script.run
          .withSuccessHandler(function(slots) {
            startTimeSelect.innerHTML = '';
            if (!slots || slots.length === 0) {
              startTimeSelect.innerHTML = '<option value="">-- ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏ß‡∏•‡∏≤‡∏ß‡πà‡∏≤‡∏á --</option>';
            } else {
              startTimeSelect.innerHTML = '<option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô --</option>';
              for (var i = 0; i < slots.length; i++) {
                var option = document.createElement('option');
                option.value = slots[i];
                option.textContent = slots[i] + ' ‡∏ô.';
                startTimeSelect.appendChild(option);
              }
              startTimeSelect.disabled = false;
            }
          })
          .withFailureHandler(function(error) {
            startTimeSelect.innerHTML = '<option value="">-- ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î --</option>';
          })
          .getAvailableTimeSlots(date, null);
      }
    }

    function updateEndTimeSlots() {
      var date = document.getElementById('requestDate').value;
      var startTime = document.getElementById('startTime').value;
      var endTimeSelect = document.getElementById('endTime');
      
      if (!startTime) {
        resetEndTimeSelect();
        return;
      }
      
      endTimeSelect.innerHTML = '<option value="">-- ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î... --</option>';
      endTimeSelect.disabled = true;
      
      google.script.run
        .withSuccessHandler(function(times) {
          endTimeSelect.innerHTML = '<option value="">-- ‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏ (default +1 ‡∏ä‡∏°.) --</option>';
          if (times && times.length > 0) {
            for (var i = 0; i < times.length; i++) {
              var option = document.createElement('option');
              option.value = times[i];
              option.textContent = times[i] + ' ‡∏ô.';
              endTimeSelect.appendChild(option);
            }
            endTimeSelect.disabled = false;
          }
        })
        .withFailureHandler(function(error) {
          endTimeSelect.innerHTML = '<option value="">-- ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î --</option>';
        })
        .getAvailableEndTimes(date, startTime, null);
    }

    function resetEndTimeSelect() {
      var endTimeSelect = document.getElementById('endTime');
      endTimeSelect.innerHTML = '<option value="">-- ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡πà‡∏≠‡∏ô --</option>';
      endTimeSelect.disabled = true;
    }

    function handleSubmit(event) {
      event.preventDefault();
      
      var submitBtn = document.getElementById('submitBtn');
      var loading = document.getElementById('loading');
      var requesterSelect = document.getElementById('requester');
      var selectedOption = requesterSelect.options[requesterSelect.selectedIndex];
      
      var formData = {
        code: document.getElementById('code').value,
        description: document.getElementById('description').value.trim(),
        location: document.getElementById('location').value.trim(),
        requestDate: document.getElementById('requestDate').value,
        startTime: document.getElementById('startTime').value,
        endTime: document.getElementById('endTime').value,
        assignedInspector: document.getElementById('assignedInspector').value,
        requesterEmail: requesterSelect.value,
        requesterName: selectedOption.getAttribute('data-name'),
        requireSurveyReport: document.getElementById('requireSurveyReport').value || 'None',
        requireLabReport: document.getElementById('requireLabReport').value || 'None',
        recordedBy: currentUserEmail
      };
      
      var requiredFields = ['code', 'description', 'location', 'requestDate', 'startTime', 'assignedInspector', 'requesterEmail'];
      var missing = false;
      for (var i = 0; i < requiredFields.length; i++) {
        if (!formData[requiredFields[i]]) {
          missing = true;
          break;
        }
      }
      
      if (missing) {
        showMessage('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô', 'error');
        return;
      }
      
      submitBtn.disabled = true;
      loading.style.display = 'block';
      
      google.script.run
        .withSuccessHandler(function(result) {
          loading.style.display = 'none';
          submitBtn.disabled = false;
          
          if (result && result.success) {
            showMessage(result.message || '‡∏™‡∏£‡πâ‡∏≤‡∏á RFI ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß', 'success', 8000);
            resetForm();
          } else {
            showMessage(result.message || '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î', 'error');
          }
        })
        .withFailureHandler(function(error) {
          loading.style.display = 'none';
          submitBtn.disabled = false;
          showMessage('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å', 'error');
        })
        .saveQCRFI(formData);
    }

    function resetForm() {
      document.getElementById('qcRfiForm').reset();
      document.getElementById('startTime').innerHTML = '<option value="">-- ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡πà‡∏≠‡∏ô --</option>';
      document.getElementById('startTime').disabled = true;
      resetEndTimeSelect();
      document.getElementById('assignedInspectorContainer').innerHTML = '<div class="inspector-loading">‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡πà‡∏≠‡∏ô</div>';
      document.getElementById('assignedInspector').value = '';
      document.getElementById('surveyReportGroup').style.display = 'none';
      document.getElementById('labReportGroup').style.display = 'none';
      loadCodeList();
      loadRequesterList();
    }
  </script>
</body>
</html>
