<!DOCTYPE html>
<html>
<head>
  <base target="_top">
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>RFI Requirement System</title>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Kanit:wght@300;400;500;600&display=swap" rel="stylesheet">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    
    body {
      font-family: 'Kanit', sans-serif;
      min-height: 100vh;
      background: linear-gradient(135deg, #667eea 0%, #4c63d2 25%, #3b5bdb 50%, #2948b1 75%, #1877f2 100%);
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 20px;
    }
    
    .container {
      width: 100%;
      max-width: 520px;
      background: #ffffff;
      border-radius: 20px;
      padding: 40px 35px;
      box-shadow: 0 20px 60px rgba(24, 119, 242, 0.3);
      animation: fadeIn 0.5s ease-out;
    }
    
    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: translateY(20px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }
    
    h1 {
      text-align: center;
      font-size: 32px;
      font-weight: 600;
      background: linear-gradient(135deg, #1877f2 0%, #2948b1 50%, #3b5bdb 100%);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      margin-bottom: 10px;
    }
    
    .subtitle {
      text-align: center;
      font-size: 16px;
      font-weight: 300;
      color: #666;
      margin-bottom: 30px;
    }

    /* ⭐ ปุ่ม Inspection Type */
    .inspection-type-section {
      margin-bottom: 20px;
    }

    .inspection-type-label {
      display: block;
      font-size: 15px;
      font-weight: 600;
      color: #333;
      margin-bottom: 12px;
      text-align: center;
    }

    .inspection-buttons {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      gap: 12px;
      margin-bottom: 20px;
    }

    .inspection-btn {
      padding: 14px 20px;
      border: 2px solid #e4e6eb;
      background: rgba(255, 255, 255, 0.5);
      backdrop-filter: blur(10px);
      border-radius: 12px;
      font-family: 'Kanit', sans-serif;
      font-size: 15px;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.3s ease;
      color: #666;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 8px;
    }

    .inspection-btn:hover {
      border-color: #1877f2;
      background: rgba(240, 247, 255, 0.8);
      transform: translateY(-2px);
    }

    .inspection-btn.active {
      border-color: #1877f2;
      background: linear-gradient(135deg, #1877f2 0%, #2948b1 100%);
      color: white;
      box-shadow: 0 4px 15px rgba(24, 119, 242, 0.3);
    }

    .inspection-btn.active.internal {
      border-color: #f59e0b;
      background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
      box-shadow: 0 4px 15px rgba(245, 158, 11, 0.3);
    }

    .inspection-btn .icon {
      font-size: 20px;
    }

    /* Info Box */
    .info-box {
      background: linear-gradient(135deg, #e7f3ff 0%, #d4e9ff 100%);
      border-left: 4px solid #1877f2;
      padding: 15px;
      border-radius: 10px;
      margin-bottom: 25px;
      font-size: 14px;
      color: #1c4587;
      display: none;
    }

    .info-box.show {
      display: block;
      animation: slideDown 0.3s ease-out;
    }

    .info-box.internal {
      background: linear-gradient(135deg, #fff7ed 0%, #ffedd5 100%);
      border-left-color: #f59e0b;
      color: #92400e;
    }

    .info-box strong {
      color: #1877f2;
    }

    .info-box.internal strong {
      color: #f59e0b;
    }

    @keyframes slideDown {
      from {
        opacity: 0;
        max-height: 0;
        padding-top: 0;
        padding-bottom: 0;
      }
      to {
        opacity: 1;
        max-height: 300px;
        padding-top: 15px;
        padding-bottom: 15px;
      }
    }
    
    .form-group {
      margin-bottom: 20px;
    }
    
    label {
      display: block;
      font-size: 14px;
      font-weight: 500;
      color: #333;
      margin-bottom: 8px;
    }
    
    label span {
      color: #1877f2;
    }
    
    input, select, textarea {
      width: 100%;
      padding: 12px 16px;
      border: 2px solid #e4e6eb;
      background: #ffffff;
      border-radius: 10px;
      font-family: 'Kanit', sans-serif;
      font-size: 15px;
      transition: all 0.3s ease;
      color: #333;
    }
    
    textarea {
      height: 90px;
      resize: vertical;
    }
    
    input:focus, select:focus, textarea:focus {
      outline: none;
      background: white;
      border-color: #1877f2;
      box-shadow: 0 0 0 3px rgba(24, 119, 242, 0.1);
    }
    
    input::placeholder, textarea::placeholder {
      color: #999;
      font-weight: 300;
    }
    
    option {
      color: #333;
      font-weight: 400;
    }
    
    input:disabled, select:disabled, textarea:disabled {
      opacity: 0.6;
      cursor: not-allowed;
      background: #f5f6f7;
    }
    
    .loading-select {
      background-color: #f5f6f7 !important;
      color: #666 !important;
    }
    
    .team-category-section {
      margin-bottom: 20px;
    }
    
    .recommendation-box {
      display: none;
      background: linear-gradient(135deg, #ecfdf5 0%, #d1fae5 100%);
      border-left: 4px solid #10b981;
      padding: 12px 15px;
      border-radius: 10px;
      margin-bottom: 12px;
      font-size: 13px;
      color: #065f46;
      animation: slideDown 0.3s ease-out;
    }
    
    .recommendation-box.show {
      display: block;
    }
    
    .recommendation-box strong {
      color: #10b981;
      font-weight: 600;
    }
    
    .recommendation-box .team-info {
      margin-top: 6px;
      font-size: 12px;
      color: #047857;
      font-style: italic;
    }
    
    .team-buttons {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      gap: 10px;
    }
    
    .team-btn {
      padding: 12px;
      border: 2px solid #e4e6eb;
      background: #ffffff;
      border-radius: 10px;
      font-family: 'Kanit', sans-serif;
      font-size: 15px;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.3s ease;
      color: #666;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 8px;
    }
    
    .team-btn:hover {
      border-color: #1877f2;
      background: #f0f7ff;
      transform: translateY(-2px);
    }
    
    .team-btn.active {
      border-color: #1877f2;
      background: linear-gradient(135deg, #1877f2 0%, #2948b1 100%);
      color: white;
      box-shadow: 0 4px 15px rgba(24, 119, 242, 0.3);
    }
    
    .team-btn.recommended {
      border-color: #10b981;
      background: linear-gradient(135deg, #ecfdf5 0%, #d1fae5 100%);
      position: relative;
      animation: pulse 2s ease-in-out infinite;
    }
    
    .team-btn.recommended::before {
      content: '\1F4A1';
      position: absolute;
      top: -8px;
      right: -8px;
      font-size: 20px;
      animation: bounce 1s ease-in-out infinite;
    }
    
    .team-btn.recommended:hover {
      border-color: #10b981;
      background: linear-gradient(135deg, #d1fae5 0%, #a7f3d0 100%);
      box-shadow: 0 4px 15px rgba(16, 185, 129, 0.3);
    }
    
    @keyframes pulse {
      0%, 100% {
        box-shadow: 0 0 0 0 rgba(16, 185, 129, 0.4);
      }
      50% {
        box-shadow: 0 0 0 8px rgba(16, 185, 129, 0);
      }
    }
    
    @keyframes bounce {
      0%, 100% {
        transform: translateY(0);
      }
      50% {
        transform: translateY(-5px);
      }
    }
    
    .team-btn .icon {
      font-size: 18px;
    }
    
    .multi-select-container {
      display: none;
      margin-top: 15px;
      padding: 15px;
      background: #f8f9fa;
      border-radius: 10px;
      border: 2px solid #e4e6eb;
      animation: slideDown 0.3s ease-out;
    }
    
    .multi-select-container.show {
      display: block;
    }
    
    .multi-select-title {
      font-size: 14px;
      font-weight: 500;
      color: #1877f2;
      margin-bottom: 10px;
    }
    
    .checkbox-group {
      display: flex;
      flex-direction: column;
      gap: 10px;
    }
    
    .checkbox-item {
      display: flex;
      align-items: center;
      gap: 8px;
      cursor: pointer;
      padding: 8px;
      border-radius: 8px;
      transition: background 0.2s;
    }
    
    .checkbox-item:hover {
      background: #e7f3ff;
    }
    
    .checkbox-item input[type="checkbox"] {
      width: 18px;
      height: 18px;
      cursor: pointer;
      accent-color: #1877f2;
    }
    
    .checkbox-item label {
      cursor: pointer;
      margin: 0;
      font-size: 14px;
      color: #333;
    }
    
    .checkbox-item .icon {
      font-size: 16px;
    }
    
    button {
      width: 100%;
      padding: 14px;
      background: linear-gradient(135deg, #1877f2 0%, #2948b1 50%, #3b5bdb 100%);
      color: white;
      border: none;
      border-radius: 10px;
      font-family: 'Kanit', sans-serif;
      font-size: 16px;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.3s ease;
      margin-top: 10px;
      box-shadow: 0 4px 15px rgba(24, 119, 242, 0.3);
    }
    
    button:hover:not(:disabled) {
      transform: translateY(-2px);
      box-shadow: 0 6px 25px rgba(24, 119, 242, 0.4);
    }
    
    button:active:not(:disabled) {
      transform: translateY(0);
    }
    
    button:disabled {
      opacity: 0.6;
      cursor: not-allowed;
      transform: none;
    }
    
    .loading {
      display: none;
      text-align: center;
      margin-top: 20px;
    }
    
    .spinner {
      width: 40px;
      height: 40px;
      margin: 0 auto 10px;
      border: 3px solid rgba(24, 119, 242, 0.2);
      border-top-color: #1877f2;
      border-radius: 50%;
      animation: spin 0.8s linear infinite;
    }
    
    @keyframes spin {
      to { transform: rotate(360deg); }
    }
    
    .loading p {
      color: #666;
      font-weight: 300;
    }
    
    .message {
      padding: 12px 16px;
      margin-top: 20px;
      border-radius: 10px;
      text-align: center;
      display: none;
      font-size: 14px;
      animation: slideIn 0.3s ease-out;
      white-space: pre-line;
    }
    
    @keyframes slideIn {
      from {
        opacity: 0;
        transform: translateY(-10px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }
    
    .success {
      background: #d4edda;
      color: #155724;
      border: 1px solid #c3e6cb;
    }
    
    .error {
      background: #f8d7da;
      color: #721c24;
      border: 1px solid #f5c6cb;
    }
    
    .info {
      background: #d1ecf1;
      color: #0c5460;
      border: 1px solid #bee5eb;
    }
    
    .warning {
      background: #fff3cd;
      color: #856404;
      border: 1px solid #ffeaa7;
    }
    
    .time-info {
      font-size: 12px;
      color: #1877f2;
      margin-top: 5px;
      font-style: italic;
    }
    
    .footer-info {
      text-align: center;
      margin-top: 20px;
      padding-top: 20px;
      border-top: 1px solid #e4e6eb;
    }
    
    .footer-info p {
      color: #666;
      font-size: 14px;
      margin: 5px 0;
    }
    
    .footer-info .version {
      color: #999;
      font-size: 12px;
    }
    
    ::-webkit-scrollbar {
      width: 8px;
    }
    
    ::-webkit-scrollbar-track {
      background: #f1f1f1;
      border-radius: 10px;
    }
    
    ::-webkit-scrollbar-thumb {
      background: linear-gradient(180deg, #1877f2 0%, #2948b1 100%);
      border-radius: 10px;
    }

    .calendar-link-btn {
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 10px;
      width: 100%;
      padding: 14px 20px;
      background: linear-gradient(135deg, #10b981 0%, #059669 100%);
      color: white;
      border-radius: 12px;
      text-decoration: none;
      font-size: 15px;
      font-weight: 500;
      margin-bottom: 25px;
      transition: all 0.3s ease;
      box-shadow: 0 4px 15px rgba(16, 185, 129, 0.25);
    }

    .calendar-link-btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 6px 20px rgba(16, 185, 129, 0.35);
      background: linear-gradient(135deg, #059669 0%, #047857 100%);
    }

    .calendar-link-btn .icon {
      font-size: 20px;
    }

    .calendar-link-btn .external-icon {
      font-size: 18px;
      opacity: 0.8;
    }

    .manual-link-btn {
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 10px;
      width: 100%;
      padding: 14px 20px;
      background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
      color: white;
      border-radius: 12px;
      text-decoration: none;
      font-size: 15px;
      font-weight: 500;
      margin-bottom: 25px;
      transition: all 0.3s ease;
      box-shadow: 0 4px 15px rgba(245, 158, 11, 0.25);
    }

    .manual-link-btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 6px 20px rgba(245, 158, 11, 0.35);
      background: linear-gradient(135deg, #d97706 0%, #b45309 100%);
    }

    .manual-link-btn .icon {
      font-size: 20px;
    }

    .manual-link-btn .external-icon {
      font-size: 18px;
      opacity: 0.8;
    }
    
    @media (max-width: 480px) {
      .container {
        padding: 30px 20px;
      }
      
      h1 {
        font-size: 26px;
      }
      
      .subtitle {
        font-size: 14px;
      }
      
      .team-buttons {
        grid-template-columns: 1fr;
      }
    }

    button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  transform: none;
  background: linear-gradient(135deg, #94a3b8 0%, #64748b 100%) !important;
}

input[type="file"] {
  cursor: pointer;
  font-size: 14px;
}

input[type="file"]:hover {
  background: #e7f3ff !important;
  border-color: #2948b1 !important;
}

input[type="file"]::file-selector-button {
  padding: 8px 16px;
  background: linear-gradient(135deg, #1877f2 0%, #2948b1 100%);
  color: white;
  border: none;
  border-radius: 6px;
  cursor: pointer;
  font-family: 'Kanit', sans-serif;
  font-weight: 500;
  margin-right: 10px;
  transition: all 0.3s ease;
}

input[type="file"]::file-selector-button:hover {
  background: linear-gradient(135deg, #2948b1 0%, #3b5bdb 100%);
  transform: translateY(-1px);
  box-shadow: 0 4px 10px rgba(24, 119, 242, 0.3);
}
  </style>
</head>
<body>
  <div class="container">
    <div class="header-section" style="text-align: center; margin-bottom: 30px;">
      <div style="display: inline-flex; align-items: center; justify-content: center; width: 65px; height: 65px; background: linear-gradient(135deg, #1877f2 0%, #2948b1 100%); border-radius: 16px; margin-bottom: 12px; box-shadow: 0 6px 20px rgba(24, 119, 242, 0.3);">
        <span style="font-size: 36px;">📋</span>
      </div>
      
      <h1>
        <span style="display: inline-flex; align-items: center; gap: 10px;">
          RFI Requirement System
          <span style="font-size: 20px; color: #10b981;">✓</span>
        </span>
      </h1>
      <p class="subtitle">ระบบบันทึก Request for Information</p>
    </div>

    <!-- ⭐ Inspection Type Buttons -->
    <div class="inspection-type-section">
      <label class="inspection-type-label">Request for Inspection</label>
      <div class="inspection-buttons">
        <button type="button" class="inspection-btn" data-type="internal">
          <span class="icon">🏢</span>
          <span>Internal</span>
        </button>
        <button type="button" class="inspection-btn" data-type="external">
          <span class="icon">🤝</span>
          <span>External</span>
        </button>
      </div>
    </div>

    <!-- ⭐ Info Box - External -->
    <div class="info-box" id="infoBoxExternal">
      <strong>📌 ข้อกำหนด (External):</strong><br>
      <strong>📅 Lead Time:</strong> ≥ 1 วัน (จองพรุ่งนี้ปิดรับ 13:00 น.)<br>
      <strong>📌 เลือกทีม:</strong> ควรเลือกทีมงานให้ครอบคลุมงานที่จอง<br>
      <strong>⏰ เวลาทำการ:</strong> 09:00 - 20:00 น. (ช่วงละ 30 นาที)<br>
      <strong>🛡️ Buffer:</strong> ระบบจะสำรอง ±30 นาที ระหว่าง RFI<br>
      <strong>👥 จัดทีม:</strong> ระบบจะเลือกทีมที่ว่างให้อัตโนมัติ<br>
      <strong>✅ Approval:</strong> ต้องขออนุมัติ Consultant
    </div>

    <!-- ⭐ Info Box - Internal -->
    <div class="info-box internal" id="infoBoxInternal">
      <strong>📌 ข้อกำหนด (Internal):</strong><br>
      <strong>⚡ Lead Time:</strong> 30 นาที (จองวันนี้ก็ได้)<br>
      <strong>📅 วันที่จอง:</strong> วันนี้หรือวันถัดไป<br>
      <strong>⏰ เวลาทำการ:</strong> 09:00 - 20:00 น. (ช่วงละ 30 นาที)<br>
      <strong>🛡️ Buffer:</strong> ±30 นาที ระหว่างการตรวจ<br>
      <strong>👥 จัดทีม:</strong> ระบบจะเลือกทีมที่ว่างให้อัตโนมัติ<br>
      <strong>📅 Calendar:</strong> สร้างทันที + ส่ง invitation<br>
      <strong>✅ Approval:</strong> ไม่ต้องขออนุมัติ Consultant
    </div>

    <a href="https://calendar.google.com/calendar/u/0/embed?src=developeritd75@gmail.com&ctz=Asia/Bangkok" 
       target="_blank" 
       class="calendar-link-btn">
      <span class="icon">📅</span>
      <span>ดูปฏิทินการจอง</span>
      <span class="external-icon">↗</span>
    </a>

    <a href="#" 
       id="manualLinkBtn"
       target="_blank" 
       class="manual-link-btn"
       style="display: none;">
      <span class="icon">📖</span>
      <span>คู่มือการใช้งาน</span>
      <span class="external-icon">↗</span>
    </a>
    
    <form id="rfiForm">
      <input type="hidden" id="inspectionType" name="inspectionType" value="">

      <div class="form-group">
        <label for="workType">ประเภทงาน <span>*</span></label>
        <select id="workType" name="workType" required>
          <option value="">-- กำลังโหลด... --</option>
        </select>
        <div class="time-info">เลือกประเภทงานที่ต้องการก่อน ระบบจะแนะนำทีมงานให้</div>
      </div>
      
      <div class="form-group team-category-section">
        <label>ทีมงาน <span>*</span></label>
        
        <div class="recommendation-box" id="recommendationBox">
          <div id="recommendationText"></div>
        </div>
        
        <div class="team-buttons">
          <button type="button" class="team-btn" data-category="Survey">
            <span class="icon">🔍</span>
            <span>Survey</span>
          </button>
          <button type="button" class="team-btn" data-category="Lab">
            <span class="icon">🧪</span>
            <span>Lab</span>
          </button>
          <button type="button" class="team-btn" data-category="Inspector">
            <span class="icon">📋</span>
            <span>Inspector</span>
          </button>
          <button type="button" class="team-btn" data-category="งานรวม" id="multiWorkBtn">
            <span class="icon">👥</span>
            <span>งานรวม</span>
          </button>
        </div>
        
        <div class="multi-select-container" id="multiSelectContainer">
          <div class="multi-select-title">✓ เลือกทีมงานที่ต้องการ (เลือกได้หลายทีม)</div>
          <div class="checkbox-group">
            <div class="checkbox-item">
              <input type="checkbox" id="cbSurvey" value="Survey">
              <span class="icon">🔍</span>
              <label for="cbSurvey">Survey</label>
            </div>
            <div class="checkbox-item">
              <input type="checkbox" id="cbLab" value="Lab">
              <span class="icon">🧪</span>
              <label for="cbLab">Lab</label>
            </div>
            <div class="checkbox-item">
              <input type="checkbox" id="cbInspector" value="Inspector">
              <span class="icon">📋</span>
              <label for="cbInspector">Inspector</label>
            </div>
          </div>
        </div>
        
        <input type="hidden" id="teamCategory" name="teamCategory" required>
        <div class="time-info">เลือกทีมงานตามคำแนะนำ หรือเลือกเองก็ได้</div>
      </div>
      
      <div class="form-group">
        <label for="requestDate">วันที่ต้องการ <span>*</span></label>
        <input type="date" id="requestDate" name="requestDate" required>
      </div>
      
      <div class="form-group">
        <label for="startTime">เวลาเริ่มต้น <span>*</span></label>
        <select id="startTime" name="startTime" required disabled>
          <option value="">-- กรุณาเลือกวันที่ก่อน --</option>
        </select>
        <div class="time-info">เลือกเวลาเริ่มต้นที่ต้องการ</div>
      </div>
      
      <div class="form-group">
        <label for="endTime">เวลาสิ้นสุด <span>*</span></label>
        <select id="endTime" name="endTime" required disabled>
          <option value="">-- กรุณาเลือกเวลาเริ่มก่อน --</option>
        </select>
        <div class="time-info">ระบบจะกำหนดเวลาเริ่มต้น +1 ชั่วโมง</div>
      </div>
      
      <div class="form-group">
        <label for="description">รายละเอียด RFI <span>*</span></label>
        <textarea id="description" name="description" required 
          placeholder="ระบุรายละเอียดให้ครบถ้วน: ประเภทงาน, ขอบเขต, วัตถุประสงค์, ข้อกำหนดพิเศษ"></textarea>
        <div class="time-info">💡 ข้อมูลที่ชัดเจนช่วยลดเวลาติดต่อกลับเพื่อแก้ไข</div>
      </div>

<div class="form-group">
  <label for="location">สถานที่ <span>*</span></label>
  <input type="text" id="location" name="location" required 
    placeholder="ระบุให้ละเอียด เช่น Crown Wall STA.0+050 to STA.0+060">
  <div class="time-info">📍 สถานที่ที่ละเอียดช่วยให้ทีมเข้าถึงได้รวดเร็วและถูกต้อง</div>
</div>

<!-- ⭐ เพิ่ม: Location Layout File Upload -->
<div class="form-group">
  <label for="locationLayoutFile">📎 แนบไฟล์ Location Layout <span>*</span></label>
  <input type="file" 
         id="locationLayoutFile" 
         name="locationLayoutFile" 
         accept=".pdf,.png,.jpg,.jpeg,.gif" 
         required
         style="padding: 10px; border: 2px dashed #1877f2; background: #f0f7ff; cursor: pointer;">
  <div class="time-info">
    📎 แนบไฟล์ PDF หรือรูปภาพ (PNG, JPG, GIF)<br>
    💡 ไฟล์จะถูกบันทึกใน Google Drive อัตโนมัติ<br>
    ⚠️ ขนาดไฟล์ไม่เกิน 10 MB
  </div>
  <div id="fileInfo" style="display: none; margin-top: 10px; padding: 10px; background: #ecfdf5; border-left: 4px solid #10b981; border-radius: 8px; font-size: 13px; color: #065f46;">
    <strong>✓ ไฟล์ที่เลือก:</strong> <span id="fileName"></span><br>
    <strong>📏 ขนาด:</strong> <span id="fileSize"></span>
  </div>
</div>
      
      <div class="form-group">
        <label for="requesterName">ชื่อผู้ขอ <span>*</span></label>
        <input type="text" id="requesterName" name="requesterName" required 
               placeholder="กำลังโหลด..." readonly
               style="background: #f0f7ff; cursor: wait;">
        <div class="time-info" id="nameInfo">🔍 กำลังตรวจสอบข้อมูลผู้ใช้...</div>
      </div>
      
      <div class="form-group">
        <label for="requesterEmail">อีเมลผู้ขอ <span>*</span></label>
        <input type="email" id="requesterEmail" name="requesterEmail" required readonly 
               style="background: linear-gradient(135deg, #f0f7ff 0%, #e7f3ff 100%); color: #1877f2; font-weight: 500; cursor: not-allowed; border-color: #1877f2;"
               placeholder="กำลังโหลดอีเมลของคุณ...">
        <div class="time-info">🔒 ระบบดึงอีเมลจากบัญชี Google ของคุณอัตโนมัติ</div>
      </div>
      
      <button type="submit" id="submitBtn">ส่ง RFI Request</button>
    </form>
    
    <div class="loading" id="loading">
      <div class="spinner"></div>
      <p>กำลังประมวลผล...</p>
    </div>
    
    <div id="message" class="message"></div>
    
    <div class="footer-info">
      <p>RFI Requirement System</p>
      <p class="version">ระบบจะส่งอีเมลแจ้งไปยังทีม QC และจัดทีมให้อัตโนมัติ</p>
    </div>
  </div>
  
  <script>
    var selectedTeamCategory = null;
    var isMultiWork = false;
    var recommendedCategory = null;
    var selectedInspectionType = null; // ⭐ ใหม่
    
    window.onload = function() {
      setMinDate();
      loadWorkTypes();
      initInspectionTypeButtons(); // ⭐ ใหม่
      initTeamCategoryButtons();
      initCheckboxes();
      loadUserEmailAndName();
      loadManualLink();
      showMessage('กรุณาเลือกประเภทการตรวจ (Internal หรือ External) ก่อน', 'info');
    };

    // ⭐ เพิ่ม: File Upload Event Listener
document.getElementById('locationLayoutFile').addEventListener('change', function(e) {
  var file = e.target.files[0];
  var fileInfo = document.getElementById('fileInfo');
  var fileName = document.getElementById('fileName');
  var fileSize = document.getElementById('fileSize');
  
  if (file) {
    // ⭐ เช็คขนาดไฟล์ (ไม่เกิน 10 MB)
    var maxSize = 10 * 1024 * 1024; // 10 MB
    
    if (file.size > maxSize) {
      showMessage('❌ ไฟล์ใหญ่เกินไป! ขนาดไฟล์ต้องไม่เกิน 10 MB', 'error');
      e.target.value = ''; // ล้างไฟล์
      fileInfo.style.display = 'none';
      return;
    }
    
    // ⭐ แสดงข้อมูลไฟล์
    fileName.textContent = file.name;
    fileSize.textContent = formatFileSize(file.size);
    fileInfo.style.display = 'block';
    
    showMessage('✓ เลือกไฟล์: ' + file.name, 'success', 3000);
  } else {
    fileInfo.style.display = 'none';
  }
});

// ⭐ ฟังก์ชันแปลงขนาดไฟล์
function formatFileSize(bytes) {
  if (bytes === 0) return '0 Bytes';
  
  var k = 1024;
  var sizes = ['Bytes', 'KB', 'MB', 'GB'];
  var i = Math.floor(Math.log(bytes) / Math.log(k));
  
  return Math.round(bytes / Math.pow(k, i) * 100) / 100 + ' ' + sizes[i];
}

    function initInspectionTypeButtons() {
  var inspectionButtons = document.querySelectorAll('.inspection-btn');
  
  inspectionButtons.forEach(function(btn) {
    btn.addEventListener('click', function() {
      // ⭐ ลบ active ออกจากทุกปุ่ม
      inspectionButtons.forEach(function(b) {
        b.classList.remove('active');
      });
      
      // ⭐ เพิ่ม active ให้ปุ่มที่กด
      this.classList.add('active');
      
      var type = this.getAttribute('data-type');
      selectedInspectionType = type;
      document.getElementById('inspectionType').value = type;
      
      // ⭐ แสดง/ซ่อน info-box
      var externalBox = document.getElementById('infoBoxExternal');
      var internalBox = document.getElementById('infoBoxInternal');
      
      if (type === 'external') {
        externalBox.classList.add('show');
        internalBox.classList.remove('show');
        showMessage('✅ เลือก: External Inspection (ต้องขออนุมัติ Consultant)', 'success', 3000);
        setMinDateExternal();
      } else if (type === 'internal') {
        internalBox.classList.add('show');
        externalBox.classList.remove('show');
        showMessage('✅ เลือก: Internal Inspection (ไม่ต้องขออนุมัติ, จองวันนี้ก็ได้)', 'success', 3000);
        setMinDateInternal();
      }
      
      // ⭐ เพิ่ม: Reset Date เพื่อให้เลือกใหม่
      document.getElementById('requestDate').value = '';
      document.getElementById('startTime').innerHTML = '<option value="">-- กรุณาเลือกวันที่ก่อน --</option>';
      document.getElementById('startTime').disabled = true;
      resetEndTimeSelect();
      
      // ⭐ Log เพื่อ debug
      console.log('✅ Selected Inspection Type:', type);
      console.log('✅ Hidden input value:', document.getElementById('inspectionType').value);
    });
  });
}

    // ⭐ ตั้ง Min Date สำหรับ External (พรุ่งนี้)
    function setMinDateExternal() {
      var today = new Date();
      var tomorrow = new Date(today);
      tomorrow.setDate(tomorrow.getDate() + 1);
      
      var dateString = tomorrow.getFullYear() + '-' + 
                      String(tomorrow.getMonth() + 1).padStart(2, '0') + '-' + 
                      String(tomorrow.getDate()).padStart(2, '0');
      document.getElementById('requestDate').setAttribute('min', dateString);
    }

    // ⭐ ตั้ง Min Date สำหรับ Internal (วันนี้)
    function setMinDateInternal() {
      var today = new Date();
      var dateString = today.getFullYear() + '-' + 
                      String(today.getMonth() + 1).padStart(2, '0') + '-' + 
                      String(today.getDate()).padStart(2, '0');
      document.getElementById('requestDate').setAttribute('min', dateString);
    }

    function loadManualLink() {
      google.script.run
        .withSuccessHandler(function(url) {
          if (url) {
            var manualBtn = document.getElementById('manualLinkBtn');
            manualBtn.href = url + '?page=manual';
            manualBtn.style.display = 'flex';
          }
        })
        .withFailureHandler(function(error) {
          console.error('Error loading manual link:', error);
        })
        .getManualUrl();
    }
    
    function initTeamCategoryButtons() {
      var teamButtons = document.querySelectorAll('.team-btn');
      var multiSelectContainer = document.getElementById('multiSelectContainer');
      
      teamButtons.forEach(function(btn) {
        btn.addEventListener('click', function() {
          teamButtons.forEach(function(b) {
            b.classList.remove('active');
            b.classList.remove('recommended');
          });
          
          this.classList.add('active');
          
          var category = this.getAttribute('data-category');
          
          if (category === 'งานรวม') {
            isMultiWork = true;
            multiSelectContainer.classList.add('show');
            selectedTeamCategory = null;
            document.getElementById('teamCategory').value = '';
            showMessage('เลือกหมวดงานที่ต้องการ (สามารถเลือกได้หลายหมวด)', 'info', 3000);
          } else {
            isMultiWork = false;
            multiSelectContainer.classList.remove('show');
            clearAllCheckboxes();
            selectedTeamCategory = category;
            document.getElementById('teamCategory').value = category;
            
            if (recommendedCategory && category === recommendedCategory) {
              showMessage('✓ เลือกหมวดงาน: ' + category + ' (ตามคำแนะนำ)', 'success', 2000);
            } else {
              showMessage('เลือกหมวดงาน: ' + category, 'info', 2000);
            }
          }
        });
      });
    }
    
    function initCheckboxes() {
      var checkboxes = document.querySelectorAll('#multiSelectContainer input[type="checkbox"]');
      
      checkboxes.forEach(function(checkbox) {
        checkbox.addEventListener('change', updateMultiWorkSelection);
      });
    }
    
    function updateMultiWorkSelection() {
      if (!isMultiWork) return;
      
      var checkboxes = document.querySelectorAll('#multiSelectContainer input[type="checkbox"]:checked');
      var selectedCategories = [];
      
      checkboxes.forEach(function(cb) {
        selectedCategories.push(cb.value);
      });
      
      if (selectedCategories.length > 0) {
        selectedTeamCategory = selectedCategories.join(',');
        document.getElementById('teamCategory').value = selectedTeamCategory;
        showMessage('เลือก: ' + selectedTeamCategory, 'info', 2000);
      } else {
        selectedTeamCategory = null;
        document.getElementById('teamCategory').value = '';
      }
    }
    
    function clearAllCheckboxes() {
      var checkboxes = document.querySelectorAll('#multiSelectContainer input[type="checkbox"]');
      checkboxes.forEach(function(cb) {
        cb.checked = false;
      });
    }

    function loadUserEmailAndName() {
      var emailInput = document.getElementById('requesterEmail');
      var nameInput = document.getElementById('requesterName');
      var nameInfo = document.getElementById('nameInfo');
      
      emailInput.value = 'กำลังโหลด...';
      emailInput.disabled = true;
      
      nameInput.value = '';
      nameInput.placeholder = 'กำลังโหลด...';
      nameInput.readOnly = true;
      nameInput.style.background = '#f0f7ff';
      nameInput.style.cursor = 'wait';
      
      google.script.run
        .withSuccessHandler(function(email) {
          if (email) {
            emailInput.value = email;
            emailInput.disabled = true;
            
            google.script.run
              .withSuccessHandler(function(result) {
                if (result.success && result.name) {
                  nameInput.value = result.name;
                  nameInput.readOnly = false;
                  nameInput.style.background = 'linear-gradient(135deg, #ecfdf5 0%, #d1fae5 100%)';
                  nameInput.style.cursor = 'text';
                  nameInfo.innerHTML = '✅ พบข้อมูลในระบบ - สามารถแก้ไขได้';
                  nameInfo.style.color = '#16a34a';
                } else if (!result.success && result.message) {
                  nameInput.value = '';
                  nameInput.placeholder = 'ไม่มีสิทธิ์ใช้งาน';
                  nameInput.readOnly = true;
                  nameInput.style.background = '#fee2e2';
                  nameInfo.innerHTML = '❌ ' + result.message;
                  nameInfo.style.color = '#dc2626';
                  showMessage(result.message, 'error');
                } else {
                  nameInput.value = '';
                  nameInput.placeholder = 'กรอกชื่อ-นามสกุล';
                  nameInput.readOnly = false;
                  nameInput.style.background = '#ffffff';
                  nameInput.style.cursor = 'text';
                  nameInfo.innerHTML = '📝 กรอกชื่อผู้ขอ - ระบบจะบันทึกในฐานข้อมูล';
                  nameInfo.style.color = '#1877f2';
                }
              })
              .withFailureHandler(function(error) {
                nameInput.value = '';
                nameInput.placeholder = 'เกิดข้อผิดพลาด';
                nameInput.readOnly = false;
                nameInput.style.background = '#ffffff';
                nameInput.style.cursor = 'text';
                nameInfo.innerHTML = '⚠️ เกิดข้อผิดพลาด - กรุณากรอกชื่อ';
                nameInfo.style.color = '#f59e0b';
              })
              .getUserNameFromEmail(email);
            
          } else {
            emailInput.value = '';
            emailInput.placeholder = 'ไม่สามารถดึงอีเมลได้ - กรุณา Login';
            emailInput.disabled = false;
            
            nameInput.value = '';
            nameInput.placeholder = 'กรุณา Login ก่อน';
            nameInput.readOnly = true;
            nameInput.style.background = '#fee2e2';
            nameInfo.innerHTML = '⚠️ กรุณา Login ด้วย Google Account';
            nameInfo.style.color = '#dc2626';
            
            showMessage('⚠️ กรุณา Login ด้วย Google Account', 'warning');
          }
        })
        .withFailureHandler(function(error) {
          emailInput.value = '';
          emailInput.placeholder = 'เกิดข้อผิดพลาด - กรุณา Login';
          emailInput.disabled = false;
          
          nameInput.value = '';
          nameInput.placeholder = 'กรุณา Login ก่อน';
          nameInput.readOnly = true;
          nameInput.style.background = '#fee2e2';
          nameInfo.innerHTML = '⚠️ เกิดข้อผิดพลาดในการดึงข้อมูล';
          nameInfo.style.color = '#dc2626';
          
          showMessage('เกิดข้อผิดพลาดในการดึงอีเมล', 'error');
        })
        .getCurrentUserEmail();
    }
    
    function loadWorkTypes() {
      var workTypeSelect = document.getElementById('workType');
      workTypeSelect.innerHTML = '<option value="">-- กำลังโหลดประเภทงาน... --</option>';
      workTypeSelect.disabled = true;
      
      google.script.run
        .withSuccessHandler(function(workTypes) {
          workTypeSelect.innerHTML = '';
          
          if (!workTypes || workTypes.length === 0) {
            workTypeSelect.innerHTML = '<option value="">-- ไม่พบประเภทงาน --</option>';
            showMessage('ไม่พบข้อมูลประเภทงาน กรุณาเพิ่มข้อมูลใน Sheet "Work"', 'warning');
          } else {
            workTypeSelect.innerHTML = '<option value="">-- เลือกประเภทงาน --</option>';
            
            workTypes.forEach(function(workType) {
              var option = document.createElement('option');
              option.value = workType;
              option.textContent = workType;
              workTypeSelect.appendChild(option);
            });
            
            workTypeSelect.disabled = false;
            workTypeSelect.addEventListener('change', handleWorkTypeChange);
          }
        })
        .withFailureHandler(function(error) {
          workTypeSelect.innerHTML = '<option value="">-- เกิดข้อผิดพลาด --</option>';
          showMessage('เกิดข้อผิดพลาดในการโหลดประเภทงาน', 'error');
        })
        .getWorkTypeList();
    }
    
    function handleWorkTypeChange() {
      var workType = document.getElementById('workType').value;
      
      if (!workType) {
        hideRecommendation();
        return;
      }
      
      showRecommendationLoading();
      
      google.script.run
        .withSuccessHandler(handleRecommendationResponse)
        .withFailureHandler(function(error) {
          hideRecommendation();
        })
        .getRecommendedCategory(workType);
    }
    
    function showRecommendationLoading() {
      var box = document.getElementById('recommendationBox');
      var text = document.getElementById('recommendationText');
      
      text.innerHTML = '🔍 กำลังวิเคราะห์ทีมงานที่เหมาะสม...';
      box.classList.add('show');
      
      document.querySelectorAll('.team-btn').forEach(function(btn) {
        btn.classList.remove('recommended');
      });
    }
    
    function handleRecommendationResponse(result) {
      if (!result || !result.success || !result.recommended || result.recommended.length === 0) {
        hideRecommendation();
        return;
      }
      
      recommendedCategory = result.recommended;
      showRecommendation(result);
      highlightRecommendedButtons(result.recommended);
    }
    
    function showRecommendation(result) {
      var box = document.getElementById('recommendationBox');
      var text = document.getElementById('recommendationText');
      
      var recommendedList = result.recommended;
      
      if (recommendedList.length === 1) {
        var item = recommendedList[0];
        var icon = getCategoryIcon(item.category);
        
        var html = '<strong>' + icon + ' แนะนำทีมงาน: ' + item.category + '</strong>';
        html += '<div class="team-info">✓ มีทีมรองรับ ' + item.count + ' ทีม';
        
        if (item.teams.length > 0 && item.teams.length <= 3) {
          html += ' (' + item.teams.join(', ') + ')';
        }
        
        html += '</div>';
        text.innerHTML = html;
      } else {
        var html = '<strong>💡 แนะนำทีมงานที่รองรับ:</strong><div class="team-info">';
        
        recommendedList.forEach(function(item, index) {
          var icon = getCategoryIcon(item.category);
          html += icon + ' <strong>' + item.category + '</strong>: ' + item.count + ' ทีม';
          
          if (item.teams.length > 0 && item.teams.length <= 2) {
            html += ' (' + item.teams.join(', ') + ')';
          }
          
          if (index < recommendedList.length - 1) {
            html += '<br>';
          }
        });
        
        html += '</div>';
        text.innerHTML = html;
      }
      
      box.classList.add('show');
    }
    
    function getCategoryIcon(category) {
      if (category === 'Survey') return '🔍';
      if (category === 'Lab') return '🧪';
      if (category === 'Inspector') return '📋';
      return '💡';
    }
    
    function highlightRecommendedButtons(recommendedList) {
      document.querySelectorAll('.team-btn').forEach(function(btn) {
        btn.classList.remove('recommended');
      });
      
      recommendedList.forEach(function(item) {
        document.querySelectorAll('.team-btn').forEach(function(btn) {
          if (btn.getAttribute('data-category') === item.category) {
            btn.classList.add('recommended');
          }
        });
      });
    }
    
    function hideRecommendation() {
      var box = document.getElementById('recommendationBox');
      box.classList.remove('show');
      recommendedCategory = null;
      
      document.querySelectorAll('.team-btn').forEach(function(btn) {
        btn.classList.remove('recommended');
      });
    }
    
    function setMinDate() {
      // Default: External mode
      setMinDateExternal();
    }
    
    function showMessage(text, type, duration) {
      if (typeof duration === 'undefined') duration = 5000;
      
      var messageDiv = document.getElementById('message');
      messageDiv.textContent = text;
      messageDiv.className = 'message ' + type;
      messageDiv.style.display = 'block';
      
      setTimeout(function() {
        messageDiv.style.display = 'none';
      }, duration);
    }
    
    document.getElementById('requestDate').addEventListener('change', updateAvailableSlots);
    document.getElementById('startTime').addEventListener('change', updateEndTimeSlots);
    document.getElementById('rfiForm').addEventListener('submit', handleSubmit);
    
    function updateAvailableSlots() {
      var date = document.getElementById('requestDate').value;
      var startTimeSelect = document.getElementById('startTime');
      var endTimeSelect = document.getElementById('endTime');
      
      setSelectLoading(startTimeSelect, 'กำลังโหลดเวลาที่ว่าง...');
      resetEndTimeSelect();
      
      if (date) {
        var selectedDate = new Date(date + 'T00:00:00');
        var today = new Date();
        var todayDateOnly = new Date(today.getFullYear(), today.getMonth(), today.getDate());
        var selectedDateOnly = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate());
        
        // ⭐ Internal: อนุญาตให้จองวันนี้ได้ (ถ้าเหลือเวลา ≥30 นาที)
        if (selectedInspectionType === 'internal') {
          if (selectedDateOnly < todayDateOnly) {
            startTimeSelect.className = startTimeSelect.className.replace(' loading-select', '');
            startTimeSelect.innerHTML = '<option value="">-- กรุณาเลือกวันนี้หรือวันถัดไป --</option>';
            startTimeSelect.disabled = true;
            showMessage('Internal: ไม่สามารถเลือกวันในอดีตได้', 'warning');
            return;
          }
        } else {
          // External: ต้องเลือกพรุ่งนี้ขึ้นไป
          if (selectedDateOnly <= todayDateOnly) {
            startTimeSelect.className = startTimeSelect.className.replace(' loading-select', '');
            startTimeSelect.innerHTML = '<option value="">-- กรุณาเลือกวันพรุ่งนี้เป็นต้นไป --</option>';
            startTimeSelect.disabled = true;
            showMessage('External: กรุณาเลือกวันพรุ่งนี้หรือวันถัดไป', 'warning');
            return;
          }
          
          // ตรวจสอบเวลา 13:00 น. สำหรับพรุ่งนี้
          var tomorrow = new Date(todayDateOnly);
          tomorrow.setDate(tomorrow.getDate() + 1);
          var isTomorrow = selectedDateOnly.getTime() === tomorrow.getTime();
          
          if (isTomorrow) {
            var currentHour = today.getHours();
            
            if (currentHour >= 13) {
              startTimeSelect.className = startTimeSelect.className.replace(' loading-select', '');
              startTimeSelect.innerHTML = '<option value="">-- เลยเวลาจองวันพรุ่งนี้แล้ว (ต้องจองก่อน 13:00 น.) --</option>';
              startTimeSelect.disabled = true;
              showMessage('❌ External: ไม่สามารถจองวันพรุ่งนี้ได้แล้ว (เลย 13:00 น.)', 'error');
              return;
            }
            
            if (currentHour >= 11 && currentHour < 13) {
              var timeLeft = 13 - currentHour;
              showMessage('⚠️ External: เหลือเวลาจองวันพรุ่งนี้อีก ' + timeLeft + ' ชั่วโมง', 'warning', 8000);
            }
          }
        }
        
        google.script.run
          .withSuccessHandler(function(availableSlots) {
            startTimeSelect.className = startTimeSelect.className.replace(' loading-select', '');
            startTimeSelect.innerHTML = '';
            
            // ⭐ Internal: กรองเวลาที่เหลือ ≥30 นาที
            if (selectedInspectionType === 'internal' && selectedDateOnly.getTime() === todayDateOnly.getTime()) {
              var now = new Date();
              var minTime = new Date(now.getTime() + (30 * 60 * 1000)); // +30 นาที
              
              availableSlots = availableSlots.filter(function(slot) {
                var slotTime = new Date(selectedDate);
                var timeParts = slot.split(':');
                slotTime.setHours(parseInt(timeParts[0]), parseInt(timeParts[1]), 0, 0);
                return slotTime > minTime;
              });
            }
            
            if (!availableSlots || availableSlots.length === 0) {
              startTimeSelect.innerHTML = '<option value="">-- ไม่มีเวลาว่าง --</option>';
              startTimeSelect.disabled = true;
              showMessage('ไม่มีเวลาว่างสำหรับวันที่ที่เลือก', 'warning');
            } else {
              startTimeSelect.innerHTML = '<option value="">-- เลือกเวลาเริ่มต้น --</option>';
              
              availableSlots.forEach(function(slot) {
                var option = document.createElement('option');
                option.value = slot;
                option.textContent = slot + ' น.';
                startTimeSelect.appendChild(option);
              });
              
              startTimeSelect.disabled = false;
            }
          })
          .withFailureHandler(function(error) {
            startTimeSelect.className = startTimeSelect.className.replace(' loading-select', '');
            startTimeSelect.innerHTML = '<option value="">-- เกิดข้อผิดพลาด --</option>';
            startTimeSelect.disabled = true;
            showMessage('เกิดข้อผิดพลาดในการโหลดเวลาที่ว่าง', 'error');
          })
          .getAvailableTimeSlots(date);
      } else {
        startTimeSelect.innerHTML = '<option value="">-- กรุณาเลือกวันที่ก่อน --</option>';
        startTimeSelect.disabled = true;
      }
    }
    
    function updateEndTimeSlots() {
      var date = document.getElementById('requestDate').value;
      var startTime = document.getElementById('startTime').value;
      var endTimeSelect = document.getElementById('endTime');
      
      if (!startTime) {
        resetEndTimeSelect();
        return;
      }
      
      setSelectLoading(endTimeSelect, 'กำลังโหลดเวลาสิ้นสุด...');
      
      if (date && startTime) {
        google.script.run
          .withSuccessHandler(function(availableEndTimes) {
            endTimeSelect.className = endTimeSelect.className.replace(' loading-select', '');
            endTimeSelect.innerHTML = '';
            
            if (!availableEndTimes || availableEndTimes.length === 0) {
              endTimeSelect.innerHTML = '<option value="">-- ไม่มีเวลาสิ้นสุดที่ว่าง --</option>';
              endTimeSelect.disabled = true;
              showMessage('ไม่มีเวลาสิ้นสุดที่เหมาะสม', 'warning');
            } else {
              endTimeSelect.innerHTML = '<option value="">-- เลือกเวลาสิ้นสุด --</option>';
              
              var startHour = parseInt(startTime.split(':')[0]);
              var startMinute = parseInt(startTime.split(':')[1]);
              var defaultEndTime = (startHour + 1).toString().padStart(2, '0') + ':' + 
                                 startMinute.toString().padStart(2, '0');
              
              availableEndTimes.forEach(function(time) {
                var option = document.createElement('option');
                option.value = time;
                option.textContent = time + ' น.';
                if (time === defaultEndTime) {
                  option.selected = true;
                }
                endTimeSelect.appendChild(option);
              });
              
              endTimeSelect.disabled = false;
              
              if (availableEndTimes.includes(defaultEndTime)) {
                showMessage('เลือกเวลาสิ้นสุดเริ่มต้น: ' + defaultEndTime + ' น.', 'info', 3000);
              }
            }
          })
          .withFailureHandler(function(error) {
            endTimeSelect.className = endTimeSelect.className.replace(' loading-select', '');
            endTimeSelect.innerHTML = '<option value="">-- เกิดข้อผิดพลาด --</option>';
            endTimeSelect.disabled = true;
            showMessage('เกิดข้อผิดพลาดในการโหลดเวลาสิ้นสุด', 'error');
          })
          .getAvailableEndTimes(date, startTime);
      }
    }
    
    function setSelectLoading(selectElement, loadingText) {
      selectElement.innerHTML = '<option value="">' + loadingText + '</option>';
      selectElement.className += ' loading-select';
      selectElement.disabled = true;
    }
    
    function resetEndTimeSelect() {
      var endTimeSelect = document.getElementById('endTime');
      endTimeSelect.innerHTML = '<option value="">-- กรุณาเลือกเวลาเริ่มก่อน --</option>';
      endTimeSelect.disabled = true;
    }
    
    function handleSubmit(event) {
  event.preventDefault();
  
  // ⭐ FIX: เช็คจาก hidden input ด้วย
  var inspectionTypeInput = document.getElementById('inspectionType').value;
  
  if (!inspectionTypeInput && !selectedInspectionType) {
    showMessage('❌ กรุณาเลือกประเภทการตรวจ (Internal หรือ External) ก่อน', 'error');
    // ⭐ เพิ่ม: scroll ขึ้นไปที่ปุ่ม
    window.scrollTo({ top: 0, behavior: 'smooth' });
    return;
  }
  
  // ⭐ FIX: ใช้ค่าจาก input หรือ variable
  var finalInspectionType = inspectionTypeInput || selectedInspectionType;
  
  if (!selectedTeamCategory) {
    showMessage('❌ กรุณาเลือกทีมงานก่อน', 'error');
    return;
  }
  
  var email = document.getElementById('requesterEmail').value;
  if (!email || email === 'กำลังโหลด...') {
    showMessage('⚠️ กรุณารอจนกว่าระบบจะโหลดอีเมลเสร็จ', 'warning');
    return;
  }
  
  var submitBtn = document.getElementById('submitBtn');
  var loading = document.querySelector('.loading');
  
  var formData = {
    inspectionType: finalInspectionType,
    teamCategory: selectedTeamCategory,
    requestDate: document.getElementById('requestDate').value,
    workType: document.getElementById('workType').value,
    startTime: document.getElementById('startTime').value,
    endTime: document.getElementById('endTime').value,
    description: document.getElementById('description').value.trim(),
    location: document.getElementById('location').value.trim(),
    requesterName: document.getElementById('requesterName').value.trim(),
    requesterEmail: email
  };
  
  // ⭐ เพิ่ม: เช็คว่ามีไฟล์หรือไม่
  var fileInput = document.getElementById('locationLayoutFile');
  var file = fileInput.files[0];
  
  if (!file) {
    showMessage('❌ กรุณาแนบไฟล์ Location Layout', 'error');
    return;
  }
  
  // ⭐ FIX: เช็คอีกครั้งว่ามี inspectionType หรือไม่
  var requiredFields = ['inspectionType', 'teamCategory', 'requestDate', 'workType', 'startTime', 'endTime', 'description', 'location', 'requesterName', 'requesterEmail'];
  var missingFields = requiredFields.filter(function(field) {
    return !formData[field];
  });
  
  if (missingFields.length > 0) {
    var missingFieldNames = missingFields.map(function(field) {
      var labels = {
        inspectionType: 'ประเภทการตรวจ',
        teamCategory: 'ทีมงาน',
        requestDate: 'วันที่',
        workType: 'ประเภทงาน',
        startTime: 'เวลาเริ่ม',
        endTime: 'เวลาสิ้นสุด',
        description: 'รายละเอียด',
        location: 'สถานที่',
        requesterName: 'ชื่อผู้ขอ',
        requesterEmail: 'อีเมล'
      };
      return labels[field] || field;
    });
    
    showMessage('❌ กรุณากรอกข้อมูลให้ครบถ้วน:\n• ' + missingFieldNames.join('\n• '), 'error');
    return;
  }
  
  // ⭐ แสดง Confirmation Dialog
  var confirmMsg = '✅ ยืนยันการบันทึก RFI Request?\n\n';
  confirmMsg += '📋 ประเภท: ' + (finalInspectionType === 'internal' ? 'Internal Inspection' : 'External Inspection') + '\n';
  confirmMsg += '🏷️ งาน: ' + formData.workType + '\n';
  confirmMsg += '👥 ทีม: ' + formData.teamCategory + '\n';
  confirmMsg += '📅 วันที่: ' + formData.requestDate + '\n';
  confirmMsg += '⏰ เวลา: ' + formData.startTime + ' - ' + formData.endTime;
  
  if (!confirm(confirmMsg)) {
    showMessage('ยกเลิกการบันทึก', 'info', 2000);
    return;
  }
  
  submitBtn.disabled = true;
  loading.style.display = 'block';
  
  // ⭐ แปลงไฟล์เป็น Base64
  var reader = new FileReader();
  
  reader.onload = function(e) {
    var base64Content = e.target.result.split(',')[1]; // ตัด "data:image/png;base64," ออก
    
    formData.locationLayoutFile = {
      name: file.name,
      mimeType: file.type,
      content: base64Content
    };
    
    console.log('📤 Submitting with file:', file.name, '(' + formatFileSize(file.size) + ')');
    
    // ⭐ ส่งข้อมูลไปยัง Backend
    google.script.run
      .withSuccessHandler(function(result) {
        loading.style.display = 'none';
        submitBtn.disabled = false;
        
        console.log('📥 Response:', result);
        
        if (result && result.success) {
          var successMsg = '✅ บันทึก ' + (finalInspectionType === 'internal' ? 'Internal Inspection' : 'RFI Request') + ' สำเร็จ!\n\n';
          successMsg += result.message || '';
          
          if (result.fileUrl) {
            successMsg += '\n\n📎 ไฟล์ Location Layout บันทึกแล้ว';
          }
          
          showMessage(successMsg, 'success', 10000);
          resetForm();
        } else {
          var errorMessage = result && result.message ? result.message : 'เกิดข้อผิดพลาดที่ไม่ทราบสาเหตุ';
          showMessage('❌ ' + errorMessage, 'error');
        }
      })
      .withFailureHandler(function(error) {
        loading.style.display = 'none';
        submitBtn.disabled = false;
        
        console.error('❌ Error:', error);
        
        var errorMessage = '❌ เกิดข้อผิดพลาดในการบันทึก:\n' + (error.message || error.toString());
        showMessage(errorMessage, 'error');
      })
      .saveRFIRequirement(formData);
  };
  
  reader.onerror = function(error) {
    loading.style.display = 'none';
    submitBtn.disabled = false;
    showMessage('❌ ไม่สามารถอ่านไฟล์ได้: ' + error.toString(), 'error');
  };
  
  // ⭐ อ่านไฟล์เป็น Base64
  reader.readAsDataURL(file);
}
    
    function resetForm() {
  document.getElementById('rfiForm').reset();
  
  // ⭐ Reset Inspection Type
  var inspectionButtons = document.querySelectorAll('.inspection-btn');
  inspectionButtons.forEach(function(btn) {
    btn.classList.remove('active');
  });
  
  document.getElementById('infoBoxExternal').classList.remove('show');
  document.getElementById('infoBoxInternal').classList.remove('show');
  
  // ⭐ Reset variables
  selectedInspectionType = null; // ✅ เพิ่มบรรทัดนี้
  document.getElementById('inspectionType').value = ''; // ✅ เพิ่มบรรทัดนี้
  
  // Reset Team
  var teamButtons = document.querySelectorAll('.team-btn');
  teamButtons.forEach(function(btn) {
    btn.classList.remove('active');
  });
  
  document.getElementById('multiSelectContainer').classList.remove('show');
  clearAllCheckboxes();
  
  selectedTeamCategory = null;
  isMultiWork = false;
  hideRecommendation();
  
  // Reset Time Slots
  document.getElementById('startTime').innerHTML = '<option value="">-- กรุณาเลือกวันที่ก่อน --</option>';
  document.getElementById('startTime').disabled = true;
  resetEndTimeSelect();
  
  // Reload Data
  loadWorkTypes();
  loadUserEmailAndName();
  setMinDate();
  
  showMessage('✅ รีเซ็ตฟอร์มเรียบร้อยแล้ว - กรุณาเลือกประเภทการตรวจใหม่', 'info', 3000);
}
  </script>
</body>
</html>
