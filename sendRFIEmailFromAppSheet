// ===== ฟังก์ชันหลักส่งอีเมล (เพิ่ม parameter ประเภทเอกสารและสถานะเอกสาร) =====
function sendRFIEmailFromAppSheet(params) {
  const { 
    email, 
    rfiNumber, 
    description, 
    status, 
    remarks, 
    requestDate,
    documentType = '',  // เพิ่ม parameter ประเภทเอกสาร (Open RFI / Close RFI)
    surveyReport = '',  // เพิ่ม parameter สถานะเอกสาร
    surveyReportNumber = '',  // เลขที่เอกสาร Survey Report
    surveyReportRemarks = '',  // หมายเหตุ Survey Report
    labReport = '',
    labReportNumber = '',  // เลขที่เอกสาร LAB Report
    labReportRemarks = '',  // หมายเหตุ LAB Report
    qcReport = '',
    qcReportNumber = '',  // เลขที่เอกสาร QC Report
    qcReportRemarks = ''  // หมายเหตุ QC Report
  } = params;
  
  if (!email || !rfiNumber || !description || !status) {
    Logger.log("❌ Missing required field(s)");
    return false;
  }
  
  try {
    // ตรวจสอบ quota
    const quota = checkEmailQuota();
    Logger.log(`📊 Current email quota: ${quota}`);
    
    if (quota <= 0) {
      Logger.log('❌ Email quota exceeded');
      return false;
    }
    
    let statusColor = getStatusColor(status);
    let statusIcon = getStatusIcon(status);
    const subject = `RFI #${rfiNumber} - ${description}`;
    
    Logger.log("=== RFI Email Info ===");
    Logger.log("📧 To: " + email);
    Logger.log("🔢 RFI: " + rfiNumber);
    Logger.log("📝 Description: " + description);
    Logger.log("📊 Status: " + status);
    Logger.log("📁 Document Type: " + documentType);
    Logger.log("✉️ Subject: " + subject);
    
    const htmlMessage = createRFIEmailHTML(
      rfiNumber, 
      description, 
      status, 
      remarks, 
      requestDate, 
      statusColor, 
      statusIcon,
      documentType,
      surveyReport,
      surveyReportNumber,
      surveyReportRemarks,
      labReport,
      labReportNumber,
      labReportRemarks,
      qcReport,
      qcReportNumber,
      qcReportRemarks
    );
    
    // ส่งอีเมลแบบ batch
    const sent = safeSendEmail({
      to: email,
      subject: subject,
      htmlBody: htmlMessage,
      name: 'RFI System - Notification'
    });
    
    if (!sent) {
      Logger.log('❌ Failed to send email');
      return false;
    }
    
    Logger.log("=====================");
    Logger.log(`✅ RFI Email sent successfully to: ${email}`);
    return true;
    
  } catch (error) {
    Logger.log(`❌ Error: ${error.toString()}`);
    return false;
  }
}

// ===== ฟังก์ชันส่งหลายคน (เพิ่ม parameter ประเภทเอกสารและสถานะเอกสาร) =====
function sendRFIEmailToMultipleRecipients(emailList, rfiNumber, description, status, remarks, requestDate, documentType = '', surveyReport = '', surveyReportNumber = '', surveyReportRemarks = '', labReport = '', labReportNumber = '', labReportRemarks = '', qcReport = '', qcReportNumber = '', qcReportRemarks = '') {
  let emails = [];
  
  if (typeof emailList === 'string') {
    emails = emailList.split(/[,;]/).map(e => e.trim()).filter(e => e.length > 0 && e.includes('@'));
  } else if (Array.isArray(emailList)) {
    emails = emailList.filter(e => e && e.includes('@'));
  } else {
    Logger.log("❌ Invalid email format");
    return false;
  }
  
  if (emails.length === 0) {
    Logger.log("❌ No valid email addresses found");
    return false;
  }
  
  try {
    // ตรวจสอบ quota
    const quota = checkEmailQuota();
    Logger.log(`📊 Current email quota: ${quota}`);
    
    if (quota <= 0) {
      Logger.log('❌ Email quota exceeded');
      return false;
    }
    
    Logger.log(`📧 Sending batch email to ${emails.length} recipient(s): ${emails.join(', ')}`);
    
    const statusColor = getStatusColor(status);
    const statusIcon = getStatusIcon(status);
    const subject = `RFI #${rfiNumber} - ${description}`;
    const htmlMessage = createRFIEmailHTML(
      rfiNumber, 
      description, 
      status, 
      remarks, 
      requestDate, 
      statusColor, 
      statusIcon,
      documentType,
      surveyReport,
      surveyReportNumber,
      surveyReportRemarks,
      labReport,
      labReportNumber,
      labReportRemarks,
      qcReport,
      qcReportNumber,
      qcReportRemarks
    );
    
    // ส่งแบบ batch (ครั้งเดียว)
    const recipientList = emails.join(',');
    
    const sent = safeSendEmail({
      to: recipientList,
      subject: subject,
      htmlBody: htmlMessage,
      name: 'RFI System - Notification'
    });
    
    if (!sent) {
      Logger.log('❌ Failed to send batch email');
      return { success: 0, failed: emails.length };
    }
    
    Logger.log(`✅ Batch email sent successfully to ${emails.length} recipients`);
    Logger.log(`📊 Email quota used: 1 (saved ${emails.length - 1} quota)`);
    
    return { success: emails.length, failed: 0 };
    
  } catch (error) {
    Logger.log(`❌ Error: ${error.toString()}`);
    return { success: 0, failed: emails.length };
  }
}

// ===== ฟังก์ชันตรวจสอบและแสดงสถานะเอกสาร =====
function getDocumentStatusIcon(status) {
  if (!status) return '';
  
  const statusLower = status.toLowerCase().trim();
  
  // ตรวจสอบ Approve
  if (statusLower.includes('approve')) {
    return '✅';
  }
  // ตรวจสอบ Reject
  if (statusLower.includes('reject')) {
    return '❌';
  }
  
  return '📄';
}

function getDocumentStatusColor(status) {
  if (!status) return '';
  
  const statusLower = status.toLowerCase().trim();
  
  // ตรวจสอบ Approve
  if (statusLower.includes('approve')) {
    return '#2ed573';
  }
  // ตรวจสอบ Reject
  if (statusLower.includes('reject')) {
    return '#ff4757';
  }
  
  return '#57606f';
}

function hasAnyDocumentStatus(surveyReport, labReport, qcReport) {
  return (surveyReport && surveyReport.trim() !== '') || 
         (labReport && labReport.trim() !== '') || 
         (qcReport && qcReport.trim() !== '');
}

// ===== ฟังก์ชัน Status และ Icon (เหมือนเดิม) =====
function getStatusColor(status) {
  const statusLower = status.toLowerCase();
  
  if (statusLower.includes('open rfi pending attachment')) return '#FF6B6B';
  if (statusLower.includes('pending qc review') || 
      statusLower.includes('revised attachment submitted – pending qc review')) return '#FF9F43';
  if (statusLower.includes('pending survey review')) return '#FFA726';
  if (statusLower.includes('ready for consult review') ||
      statusLower.includes('qc approved – waiting for consult review')) return '#3742fa';
  if (statusLower.includes('rfi approved – proceed to site inspection')) return '#2ed573';
  if (statusLower.includes('awaiting final documents for rfi closure') ||
      statusLower.includes('consult approved – awaiting signed documents')) return '#5352ed';
  if (statusLower.includes('waiting for revised attachment')) return '#ffa502';
  if (statusLower.includes('rejected by consult – revise required') ||
      statusLower.includes('rejected by survey reviewer')) return '#ff4757';
  if (statusLower.includes('rfi closure documents attached')) return '#1dd1a1';
  if (statusLower.includes('inspection started')) return '#00d2d3';
  if (statusLower.includes('inspection postponed')) return '#ff9ff3';
  if (statusLower.includes('site inspection completed by inspector')) return '#7bed9f';
  if (statusLower.includes('cancel')) return '#747d8c';
  
  return '#57606f';
}

function getStatusIcon(status) {
  const statusLower = status.toLowerCase();
  
  if (statusLower.includes('open rfi pending attachment')) return '📋';
  if (statusLower.includes('pending qc review') || 
      statusLower.includes('revised attachment submitted – pending qc review')) return '🔍';
  if (statusLower.includes('pending survey review')) return '🔎';
  if (statusLower.includes('ready for consult review') ||
      statusLower.includes('qc approved – waiting for consult review')) return '👨‍💼';
  if (statusLower.includes('rfi approved – proceed to site inspection')) return '✅';
  if (statusLower.includes('awaiting final documents for rfi closure') ||
      statusLower.includes('consult approved – awaiting signed documents')) return '📝';
  if (statusLower.includes('waiting for revised attachment')) return '🔄';
  if (statusLower.includes('rejected by consult – revise required') ||
      statusLower.includes('rejected by survey reviewer')) return '❌';
  if (statusLower.includes('rfi closure documents attached')) return '🎉';
  if (statusLower.includes('inspection started')) return '🔍';
  if (statusLower.includes('inspection postponed')) return '⏰';
  if (statusLower.includes('site inspection completed by inspector')) return '✅';
  if (statusLower.includes('cancel')) return '🚫';
  
  return '📄';
}

// ===== ฟังก์ชันสร้าง HTML (เพิ่มส่วนประเภทเอกสารและสถานะเอกสาร) =====
function createRFIEmailHTML(rfiNumber, description, status, remarks, requestDate, statusColor, statusIcon, documentType, surveyReport, surveyReportNumber, surveyReportRemarks, labReport, labReportNumber, labReportRemarks, qcReport, qcReportNumber, qcReportRemarks) {
  const currentDate = new Date().toLocaleDateString('th-TH', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
    hour: '2-digit',
    minute: '2-digit'
  });
  
  let formattedRequestDate = '';
  if (requestDate) {
    try {
      const reqDate = new Date(requestDate);
      formattedRequestDate = reqDate.toLocaleDateString('th-TH', {
        year: 'numeric',
        month: 'long',
        day: 'numeric'
      });
    } catch (error) {
      formattedRequestDate = requestDate;
    }
  }
  
  // สร้าง HTML สำหรับประเภทเอกสาร
  let documentTypeHTML = '';
  if (documentType && documentType.trim() !== '') {
    const typeColor = documentType.toLowerCase().includes('close') ? '#2ed573' : '#3742fa';
    const typeIcon = documentType.toLowerCase().includes('close') ? '📁' : '📂';
    documentTypeHTML = `
      <div style="text-align: center; margin-bottom: 15px;">
        <span style="display: inline-block; background-color: ${typeColor}; color: white; padding: 8px 20px; border-radius: 20px; font-size: 14px; font-weight: bold;">
          ${typeIcon} ${documentType}
        </span>
      </div>
    `;
  }
  
  // สร้าง HTML สำหรับสถานะเอกสาร (แสดงเฉพาะที่มีข้อมูล)
  const hasDocStatus = hasAnyDocumentStatus(surveyReport, labReport, qcReport);
  
  let documentStatusHTML = '';
  if (hasDocStatus) {
    documentStatusHTML = '<div class="document-status-section">';
    documentStatusHTML += '<h3 style="color: #333; margin-bottom: 15px; font-size: 18px;">📑 สถานะเอกสาร</h3>';
    documentStatusHTML += '<div class="document-status-grid">';
    
    // Survey Report
    if (surveyReport && surveyReport.trim() !== '') {
      const surveyIcon = getDocumentStatusIcon(surveyReport);
      const surveyColor = getDocumentStatusColor(surveyReport);
      documentStatusHTML += `
        <div class="doc-status-item" style="border-left-color: ${surveyColor};">
          <div class="doc-label">📊 Survey Report</div>
          ${surveyReportNumber && surveyReportNumber.trim() !== '' ? `
          <div class="doc-number">
            📋 เลขที่: ${surveyReportNumber}
          </div>
          ` : ''}
          <div class="doc-status" style="background-color: ${surveyColor};">
            ${surveyIcon} ${surveyReport}
          </div>
          ${surveyReportRemarks && surveyReportRemarks.trim() !== '' ? `
          <div class="doc-remarks">
            💬 ${surveyReportRemarks}
          </div>
          ` : ''}
        </div>
      `;
    }
    
    // LAB Report
    if (labReport && labReport.trim() !== '') {
      const labIcon = getDocumentStatusIcon(labReport);
      const labColor = getDocumentStatusColor(labReport);
      documentStatusHTML += `
        <div class="doc-status-item" style="border-left-color: ${labColor};">
          <div class="doc-label">🧪 LAB Report</div>
          ${labReportNumber && labReportNumber.trim() !== '' ? `
          <div class="doc-number">
            📋 เลขที่: ${labReportNumber}
          </div>
          ` : ''}
          <div class="doc-status" style="background-color: ${labColor};">
            ${labIcon} ${labReport}
          </div>
          ${labReportRemarks && labReportRemarks.trim() !== '' ? `
          <div class="doc-remarks">
            💬 ${labReportRemarks}
          </div>
          ` : ''}
        </div>
      `;
    }
    
    // QC Report
    if (qcReport && qcReport.trim() !== '') {
      const qcIcon = getDocumentStatusIcon(qcReport);
      const qcColor = getDocumentStatusColor(qcReport);
      documentStatusHTML += `
        <div class="doc-status-item" style="border-left-color: ${qcColor};">
          <div class="doc-label">✔️ QC Report</div>
          ${qcReportNumber && qcReportNumber.trim() !== '' ? `
          <div class="doc-number">
            📋 เลขที่: ${qcReportNumber}
          </div>
          ` : ''}
          <div class="doc-status" style="background-color: ${qcColor};">
            ${qcIcon} ${qcReport}
          </div>
          ${qcReportRemarks && qcReportRemarks.trim() !== '' ? `
          <div class="doc-remarks">
            💬 ${qcReportRemarks}
          </div>
          ` : ''}
        </div>
      `;
    }
    
    documentStatusHTML += '</div></div>';
  }
  
  return `
    <!DOCTYPE html>
    <html>
    <head>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <style>
        body {
          font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
          line-height: 1.6;
          margin: 0;
          padding: 20px;
          background-color: #f4f4f4;
        }
        .email-container {
          max-width: 600px;
          margin: 0 auto;
          background-color: white;
          border-radius: 10px;
          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
          overflow: hidden;
        }
        .header {
          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
          color: white;
          padding: 30px 20px;
          text-align: center;
        }
        .header h1 {
          margin: 0;
          font-size: 28px;
          font-weight: 300;
        }
        .content {
          padding: 30px;
        }
        .rfi-card {
          background-color: #f8f9ff;
          border-left: 5px solid ${statusColor};
          padding: 20px;
          margin: 20px 0;
          border-radius: 5px;
        }
        .rfi-number {
          font-size: 24px;
          font-weight: bold;
          color: #333;
          margin-bottom: 10px;
        }
        .status-badge {
          display: inline-block;
          background-color: ${statusColor};
          color: white;
          padding: 8px 16px;
          border-radius: 20px;
          font-size: 14px;
          font-weight: bold;
          margin: 10px 0;
        }
        .info-row {
          margin: 15px 0;
          padding: 10px 0;
          border-bottom: 1px solid #eee;
        }
        .info-row:last-child {
          border-bottom: none;
        }
        .label {
          font-weight: bold;
          color: #555;
          display: inline-block;
          width: 120px;
        }
        .value {
          color: #333;
        }
        .description {
          background-color: white;
          padding: 15px;
          border-radius: 5px;
          border: 1px solid #ddd;
          margin-top: 10px;
        }
        .remarks {
          background-color: #fff3cd;
          border: 1px solid #ffeaa7;
          padding: 15px;
          border-radius: 5px;
          margin-top: 10px;
        }
        .document-status-section {
          margin-top: 25px;
          padding-top: 20px;
          border-top: 2px solid #e0e0e0;
        }
        .document-status-grid {
          display: grid;
          gap: 15px;
          margin-top: 15px;
        }
        .doc-status-item {
          background-color: #f8f9fa;
          padding: 15px;
          border-radius: 8px;
          border-left: 4px solid #ccc;
          transition: transform 0.2s;
        }
        .doc-label {
          font-weight: bold;
          color: #555;
          font-size: 14px;
          margin-bottom: 8px;
        }
        .doc-number {
          font-size: 13px;
          color: #666;
          margin-bottom: 8px;
          padding: 5px 10px;
          background-color: #e8f4f8;
          border-radius: 4px;
          display: inline-block;
        }
        .doc-status {
          display: inline-block;
          color: white;
          padding: 6px 12px;
          border-radius: 15px;
          font-size: 13px;
          font-weight: bold;
        }
        .doc-remarks {
          margin-top: 10px;
          padding: 10px;
          background-color: #fff3cd;
          border: 1px solid #ffeaa7;
          border-radius: 5px;
          font-size: 13px;
          color: #333;
          line-height: 1.5;
        }
        .footer {
          background-color: #f8f9fa;
          padding: 20px;
          text-align: center;
          color: #666;
          font-size: 12px;
        }
        .divider {
          height: 2px;
          background: linear-gradient(90deg, transparent, ${statusColor}, transparent);
          margin: 20px 0;
        }
      </style>
    </head>
    <body>
      <div class="email-container">
        <div class="header">
          <h1>📋 RFI Notification</h1>
          <p style="margin: 5px 0 0 0; opacity: 0.9;">Request for Information</p>
        </div>
        
        <div class="content">
          <div class="rfi-card">
            <div class="rfi-number">
              ${statusIcon} RFI #${rfiNumber}
            </div>
            
            ${documentTypeHTML}
            
            <div class="status-badge">
              Status: ${status}
            </div>
            
            <div class="divider"></div>
            
            <div class="info-row">
              <span class="label">รายละเอียด:</span>
              <div class="description">
                ${description}
              </div>
            </div>
            
            ${remarks ? `
            <div class="info-row">
              <span class="label">หมายเหตุ:</span>
              <div class="remarks">
                <strong>📝 หมายเหตุ:</strong><br>
                ${remarks}
              </div>
            </div>
            ` : ''}
            
            ${requestDate ? `
            <div class="info-row">
              <span class="label">วันที่ตรวจสอบ:</span>
              <span class="value">📅 ${formattedRequestDate}</span>
            </div>
            ` : ''}
            
            <div class="info-row">
              <span class="label">วันที่ส่ง:</span>
              <span class="value">${currentDate}</span>
            </div>
            
            ${documentStatusHTML}
          </div>
          
          <p style="text-align: center; color: #666; margin-top: 30px;">
            💡 <em>กรุณาติดตาม RFI นี้และดำเนินการตามความเหมาะสม</em>
          </p>
        </div>
        
        <div class="footer">
          <p>🏢 ระบบจัดการ RFI | สร้างโดย AppSheet</p>
          <p>อีเมลนี้ถูกส่งอัตโนมัติ กรุณาอย่าตอบกลับอีเมลนี้</p>
        </div>
      </div>
    </body>
    </html>
  `;
}

// ===== ฟังก์ชัน Helper =====
function checkEmailQuota() {
  try {
    const remainingQuota = MailApp.getRemainingDailyQuota();
    Logger.log('Remaining email quota:', remainingQuota);
    return remainingQuota;
  } catch (error) {
    Logger.log('Error checking email quota:', error);
    return 0;
  }
}

function safeSendEmail(emailParams) {
  try {
    const quota = checkEmailQuota();
    if (quota <= 0) {
      Logger.log('Email quota exceeded, skipping email');
      return false;
    }
    
    MailApp.sendEmail(emailParams);
    return true;
  } catch (error) {
    Logger.log('Error sending email:', error);
    return false;
  }
}

// ===== ฟังก์ชันทดสอบ =====

// 1. ทดสอบส่งคนเดียว + มีหมายเหตุเอกสารครบ
function testSingleEmail() {
  sendRFIEmailFromAppSheet({
    email: "surveymarine048@gmail.com",
    rfiNumber: "10-RFI-001",
    description: "ทดสอบระบบ RFI - Batch Email พร้อมสถานะเอกสาร",
    status: "Open RFI Pending Attachment",
    remarks: "ทดสอบการส่งแบบ batch พร้อมแสดงสถานะเอกสาร",
    requestDate: "2024-10-15",
    documentType: "Open RFI",
    surveyReport: "Approved",
    surveyReportNumber: "SUR-2024-001",
    surveyReportRemarks: "ผ่านการตรวจสอบเรียบร้อยแล้ว",
    labReport: "Rejected",
    labReportNumber: "LAB-2024-055",
    labReportRemarks: "ต้องแก้ไขข้อมูลในหน้า 3 และส่งใหม่ภายใน 3 วัน",
    qcReport: "Approved",
    qcReportNumber: "QC-2024-012",
    qcReportRemarks: ""  // ไม่มีหมายเหตุ - จะไม่แสดง
  });
}

// 2. ทดสอบส่งหลายคน + มีหมายเหตุบางส่วน
function testMultipleEmails() {
  sendRFIEmailToMultipleRecipients(
    "surveymarine048@gmail.com, surveymarine049@gmail.com",
    "10-RFI-003",
    "ทดสอบส่งหลายคนพร้อมสถานะเอกสาร",
    "Inspection Started",
    "ส่งให้หลายคนพร้อมกัน - ใช้ quota แค่ 1",
    "2024-10-15",
    "Close RFI",
    "Approved",
    "SUR-2024-003",
    "ตรวจสอบครบถ้วนแล้ว",
    "",
    "",
    "",
    "Rejected",
    "",
    "กรุณาแก้ไขและส่งใหม่"
  );
}

// 3. ทดสอบโดยไม่มีสถานะเอกสารเลย
function testNoDocumentStatus() {
  sendRFIEmailFromAppSheet({
    email: "surveymarine048@gmail.com",
    rfiNumber: "10-RFI-002",
    description: "ทดสอบโดยไม่มีสถานะเอกสาร",
    status: "Pending QC Review",
    remarks: "ยังไม่มีสถานะเอกสาร - จะไม่แสดงส่วนนี้",
    requestDate: "2024-10-15",
    documentType: "Open RFI"
    // ไม่ใส่ surveyReport, labReport, qcReport
  });
}

// 4. ทดสอบ Open RFI พร้อมหมายเหตุเอกสารทั้งหมด
function testOpenRFI() {
  sendRFIEmailFromAppSheet({
    email: "surveymarine048@gmail.com",
    rfiNumber: "10-RFI-004",
    description: "ทดสอบ Open RFI แบบสมบูรณ์",
    status: "Ready for Consult Review",
    remarks: "เอกสารครบถ้วนพร้อมส่งให้ที่ปรึกษาตรวจสอบ",
    requestDate: "2024-10-15",
    documentType: "Open RFI",
    surveyReport: "Approved",
    surveyReportNumber: "SUR-2024-004",
    surveyReportRemarks: "Survey Report ผ่านการตรวจสอบจาก Surveyor แล้ว",
    labReport: "Approved",
    labReportNumber: "LAB-2024-088",
    labReportRemarks: "ผลแล้บออกมาตรงตามข้อกำหนด ไม่พบสิ่งผิดปกติ",
    qcReport: "Approved",
    qcReportNumber: "QC-2024-025",
    qcReportRemarks: "QC ตรวจสอบแล้วเห็นชอบให้ดำเนินการต่อได้"
  });
}

// 5. ทดสอบ Close RFI พร้อม Reject documents
function testCloseRFI() {
  sendRFIEmailFromAppSheet({
    email: "surveymarine048@gmail.com",
    rfiNumber: "10-RFI-005",
    description: "ทดสอบ Close RFI พร้อมเอกสารที่ถูก Reject",
    status: "Awaiting Final Documents for RFI Closure",
    remarks: "รอเอกสารปิด RFI หลังจากแก้ไขตามที่แนะนำ",
    requestDate: "2024-10-15",
    documentType: "Close RFI",
    surveyReport: "Rejected",
    surveyReportNumber: "SUR-2024-005",
    surveyReportRemarks: "Survey Report ต้องเพิ่มรายละเอียดในส่วนของ Section 2.3 และแนบภาพประกอบเพิ่มเติม",
    labReport: "Approved",
    labReportNumber: "LAB-2024-099",
    labReportRemarks: "ผลการทดสอบจากห้องปฏิบัติการผ่านเกณฑ์",
    qcReport: "Rejected",
    qcReportNumber: "QC-2024-030",
    qcReportRemarks: "พบความไม่สอดคล้องในรายการตรวจสอบข้อที่ 5, 7 และ 12 กรุณาแก้ไขและส่งใหม่ภายใน 5 วันทำการ"
  });
}

// 6. ทดสอบส่งหลายคน แบบไม่มี Document Type
function testMultipleEmailsNoType() {
  sendRFIEmailToMultipleRecipients(
    "surveymarine048@gmail.com, surveymarine049@gmail.com, test@example.com",
    "10-RFI-006",
    "ทดสอบส่งหลายคนโดยไม่ระบุประเภทเอกสาร",
    "Pending Survey Review",
    "ส่งให้ทีม Survey ทั้งหมด",
    "2024-10-15",
    "",  // ไม่ระบุ Document Type
    "Approved",
    "",
    "ตรวจสอบเบื้องต้นเรียบร้อย",
    "",
    "",
    "",
    "",
    "",
    ""
  );
}

// 7. ทดสอบกรณี Inspection Started
function testInspectionStarted() {
  sendRFIEmailFromAppSheet({
    email: "surveymarine048@gmail.com",
    rfiNumber: "10-RFI-007",
    description: "เริ่มการตรวจสอบในสนาม",
    status: "Inspection Started",
    remarks: "Inspector เริ่มทำการตรวจสอบแล้วเมื่อเวลา 09:00 น.",
    requestDate: "2024-10-15",
    documentType: "Open RFI",
    surveyReport: "Approved",
    surveyReportNumber: "SUR-2024-007",
    surveyReportRemarks: "",
    labReport: "Approved",
    labReportNumber: "LAB-2024-100",
    labReportRemarks: "",
    qcReport: "Approved",
    qcReportNumber: "QC-2024-040",
    qcReportRemarks: ""
  });
}

// 8. ทดสอบกรณี RFI Cancelled
function testCancelledRFI() {
  sendRFIEmailFromAppSheet({
    email: "surveymarine048@gmail.com",
    rfiNumber: "10-RFI-008",
    description: "ยกเลิก RFI เนื่องจากเปลี่ยนแปลงแผนงาน",
    status: "Cancel",
    remarks: "โครงการมีการเปลี่ยนแปลงแผนงาน RFI นี้จึงถูกยกเลิก",
    requestDate: "2024-10-15",
    documentType: "Open RFI",
    surveyReport: "",
    surveyReportNumber: "",
    surveyReportRemarks: "",
    labReport: "",
    labReportNumber: "",
    labReportRemarks: "",
    qcReport: "",
    qcReportNumber: "",
    qcReportRemarks: ""
  });
}

// 9. แสดงรายการ Status ทั้งหมดที่รองรับ
function showAllRFIStatuses() {
  const statuses = [
    "Open RFI Pending Attachment",
    "Pending QC Review",
    "Pending Survey Review", 
    "Ready for Consult Review",
    "QC Approved – Waiting for Consult Review",
    "RFI Approved – Proceed to Site Inspection",
    "Awaiting Final Documents for RFI Closure",
    "Consult Approved – Awaiting Signed Documents",
    "Waiting for Revised Attachment",
    "Revised Attachment Submitted – Pending QC Review",
    "Rejected by Consult – Revise Required",
    "Rejected by Survey Reviewer",
    "RFI Closure Documents Attached",
    "Inspection Started",
    "Inspection Postponed", 
    "Site Inspection Completed by Inspector",
    "Cancel"
  ];
  
  Logger.log("=".repeat(60));
  Logger.log("📋 รายการ Status ทั้งหมดพร้อมสีและไอคอน");
  Logger.log("=".repeat(60));
  
  statuses.forEach((status, index) => {
    const color = getStatusColor(status);
    const icon = getStatusIcon(status);
    Logger.log(`${index + 1}. ${icon} ${status}`);
    Logger.log(`   Color: ${color}`);
    Logger.log("");
  });
  
  Logger.log("=".repeat(60));
}

// 10. ทดสอบทุกฟังก์ชันพร้อมกัน (ระวัง quota!)
function testAllFunctions() {
  Logger.log("🧪 เริ่มการทดสอบทุกฟังก์ชัน...");
  Logger.log("⚠️ การทดสอบนี้จะใช้ Email Quota หลายอัน!");
  Logger.log("");
  
  const quota = checkEmailQuota();
  Logger.log(`📊 Email Quota คงเหลือ: ${quota}`);
  
  if (quota < 10) {
    Logger.log("❌ Email Quota ไม่เพียงพอ! ต้องการอย่างน้อย 10 quota");
    return;
  }
  
  Logger.log("");
  Logger.log("1️⃣ ทดสอบส่งคนเดียว...");
  testSingleEmail();
  Utilities.sleep(2000);
  
  Logger.log("");
  Logger.log("2️⃣ ทดสอบส่งหลายคน...");
  testMultipleEmails();
  Utilities.sleep(2000);
  
  Logger.log("");
  Logger.log("3️⃣ ทดสอบไม่มีสถานะเอกสาร...");
  testNoDocumentStatus();
  Utilities.sleep(2000);
  
  Logger.log("");
  Logger.log("4️⃣ ทดสอบ Open RFI...");
  testOpenRFI();
  Utilities.sleep(2000);
  
  Logger.log("");
  Logger.log("5️⃣ ทดสอบ Close RFI...");
  testCloseRFI();
  
  Logger.log("");
  Logger.log("✅ ทดสอบเสร็จสิ้น!");
  Logger.log(`📊 Email Quota คงเหลือ: ${checkEmailQuota()}`);
}
